{
  "code": "import { Lwg3D, LwgAni3D, LwgDate, LwgDialogue, LwgEvent, LwgTimer, LwgTools, LwgWX } from \"../../Lwg/Lwg\";\r\nimport { GameData } from \"../Control/GameData\";\r\nimport { GameEnum } from \"../Control/GameEnum\";\r\nimport { GameEvent } from \"../Control/GameEvent\";\r\nimport { GameRes } from \"../Control/GameRes\";\r\nimport { Effect3D } from \"./Effect3D\";\r\nimport { MainScene } from \"./MainScene\";\r\nexport class Role {\r\n    constructor() {\r\n        Role.ins = this;\r\n        this.mainScene = GameRes.Scene3D.MainScene.instance;\r\n        this.cameraPoint = this.mainScene.getChildByName('CameraPoint');\r\n        this.camera = this.cameraPoint.getChildByName('Main Camera');\r\n        this.role = new Laya.Sprite3D;\r\n        this.role.name = 'Role';\r\n        this.mainScene.addChild(this.role);\r\n        StateControl.Init();\r\n    }\r\n    setState(state, args) {\r\n        StateControl.stateClear();\r\n        switch (state) {\r\n            case GameEnum.RoleState.Ready:\r\n                StateControl.stateReset();\r\n                StateControl.Ready.ins.action();\r\n                break;\r\n            case GameEnum.RoleState.Start:\r\n                StateControl.stateReset();\r\n                StateControl.Start.ins.action(() => {\r\n                    this.setState(GameEnum.RoleState.Run);\r\n                });\r\n                break;\r\n            case GameEnum.RoleState.Run:\r\n                StateControl.MoveCrosswise.ins.action();\r\n                StateControl.MoveForward.ins.action();\r\n                StateControl.Run.ins.action();\r\n                break;\r\n            case GameEnum.RoleState.Magma:\r\n                StateControl.Magma.ins.action(args[0], () => {\r\n                    this.setState(GameEnum.RoleState.Run);\r\n                });\r\n                break;\r\n            case GameEnum.RoleState.RoadNarrows:\r\n                StateControl.RoadNarrows.ins.action(args[0], () => {\r\n                    StateControl.MoveCrosswise.ins.action();\r\n                    StateControl.MoveForward.ins.action();\r\n                });\r\n                break;\r\n            case GameEnum.RoleState.EatFood:\r\n                StateControl.EatFood.ins.action(args[0], () => {\r\n                    this.setState(GameEnum.RoleState.Run);\r\n                }, () => {\r\n                    this.setState(GameEnum.RoleState.Defeated);\r\n                });\r\n                break;\r\n            case GameEnum.RoleState.Transformation:\r\n                StateControl.Transformation.ins.action(args[0], () => {\r\n                    StateControl.MoveForward.ins.action();\r\n                }, () => {\r\n                    this.setState(GameEnum.RoleState.Run);\r\n                });\r\n                break;\r\n            case GameEnum.RoleState.Destination:\r\n                StateControl.MoveForward.ins.action();\r\n                StateControl.MoveForward.ins.speed *= 2;\r\n                StateControl.Destination.ins.action();\r\n                break;\r\n            case GameEnum.RoleState.VSBOSS:\r\n                StateControl.VSBOSS.ins.action(args[0], () => {\r\n                    this.setState(GameEnum.RoleState.AccumulateStrength);\r\n                }, () => {\r\n                    this.setState(GameEnum.RoleState.Defeated);\r\n                });\r\n                break;\r\n            case GameEnum.RoleState.AccumulateStrength:\r\n                StateControl.AccumulateStrength.ins.action(() => {\r\n                    this.setState(GameEnum.RoleState.Victory);\r\n                });\r\n                break;\r\n            case GameEnum.RoleState.Victory:\r\n                StateControl.Victory.ins.action();\r\n                break;\r\n            case GameEnum.RoleState.Defeated:\r\n                StateControl.Defeated.ins.action();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.state = state;\r\n    }\r\n    playAni(aniName) {\r\n        this.skin = this.role.getChildAt(0);\r\n        const box = this.skin.getChildByName('box');\r\n        if (!box.getComponent(RoleScript)) {\r\n            box.addComponent(RoleScript);\r\n        }\r\n        const aniCilp = GameData.Animator.getClipNameByRoleNameAndAni(this.skin.name, aniName);\r\n        return LwgTools.D3.playAnimator(this.skin, aniCilp);\r\n    }\r\n    playAniByAppoint(skin, aniName) {\r\n        const aniCilp = GameData.Animator.getClipNameByRoleNameAndAni(skin.name, aniName);\r\n        return LwgTools.D3.playAnimator(skin, aniCilp);\r\n    }\r\n    changeSkin(name, aniName) {\r\n        LwgTools.Node.destroyAllChildren(this.role);\r\n        this.skin = GameRes.Prefab3D[name].instance.clone();\r\n        this.role.addChild(this.skin);\r\n        this.skin.transform.localPosition = new Laya.Vector3(0, 0, 0);\r\n        const box = this.skin.getChildByName('box');\r\n        if (!box.getComponent(RoleScript)) {\r\n            box.addComponent(RoleScript);\r\n        }\r\n        if (aniName) {\r\n            const aniCilp = GameData.Animator.getClipNameByRoleNameAndAni(this.skin.name, GameEnum.RoleAni.run);\r\n            LwgTools.D3.playAnimator(this.skin, aniCilp);\r\n        }\r\n    }\r\n    showFontHP(num, sp3D, diffX, diffY) {\r\n        const sp3d0 = sp3D ? sp3D : Role.ins.role;\r\n        const point = LwgTools.D3.getPosToScreen(sp3d0.transform.position, Role.ins.camera);\r\n        let color = '#ff5547';\r\n        if (num >= 0) {\r\n            color = '#56ff47';\r\n        }\r\n        const numStr = num > 0 ? '+' + num.toString() : num.toString();\r\n        const diffX0 = diffX ? diffX : 100;\r\n        const diffY0 = diffY ? diffY : 100;\r\n        LwgDialogue.FloatWord.createFontSystem(point.x + diffX0, point.y + diffY0, { content: numStr, color: color }, 1, false);\r\n        LwgWX.shakeShort();\r\n    }\r\n    updateLevelDisplay() {\r\n        const point = LwgTools.D3.getPosToScreen(Role.ins.role.transform.position, Role.ins.camera);\r\n        point.y -= this.role.transform.localScaleX * 100;\r\n        point.y -= 50;\r\n        LwgEvent.notify(GameEvent.updateLevelDisplay, [point]);\r\n    }\r\n}\r\nclass RoleScript extends Lwg3D.Object3D {\r\n    onTriggerEnter(other) {\r\n        const otherOwner = other.owner;\r\n        const name = otherOwner.name;\r\n        if (otherOwner['already']) {\r\n            return;\r\n        }\r\n        otherOwner['already'] = true;\r\n        if (name == 'RoadMen01' || name == 'RoadMen02') {\r\n            Role.ins.setState(GameEnum.RoleState.Transformation, [otherOwner]);\r\n        }\r\n        else if (name.substr(0, 4) == 'Food') {\r\n            Role.ins.setState(GameEnum.RoleState.EatFood, [otherOwner]);\r\n        }\r\n        else if (name === 'destination') {\r\n            Role.ins.setState(GameEnum.RoleState.Destination, [otherOwner]);\r\n        }\r\n        else if (name === 'box') {\r\n            Role.ins.setState(GameEnum.RoleState.VSBOSS, [otherOwner]);\r\n        }\r\n        else if (name.substr(0, 12) === 'Magma') {\r\n            Role.ins.setState(GameEnum.RoleState.Magma, [otherOwner]);\r\n        }\r\n        else if (name === 'Road_Base02') {\r\n            Role.ins.setState(GameEnum.RoleState.RoadNarrows, [1]);\r\n        }\r\n    }\r\n    onTriggerExit(other) {\r\n        const otherOwner = other.owner;\r\n        const name = otherOwner.name;\r\n        if (name.substr(0, 12) === 'Magma') {\r\n            Role.ins.setState(GameEnum.RoleState.Magma, [otherOwner]);\r\n        }\r\n        else if (name === 'Road_Base02') {\r\n            Role.ins.setState(GameEnum.RoleState.RoadNarrows, [0]);\r\n        }\r\n    }\r\n}\r\nexport class aniScript extends Lwg3D.Object3D {\r\n    lwgOnAwake() {\r\n    }\r\n    attackEnd() {\r\n        const animator = this.owner.getComponent(Laya.Animator);\r\n        const state = GameData.Animator.getClipNameByRoleNameAndAni(this.owner.name, GameEnum.RoleAni.idle);\r\n        animator.crossFade(state, 1);\r\n    }\r\n}\r\nexport var StateControl;\r\n(function (StateControl) {\r\n    function stateReset() {\r\n        for (const key in StateControl) {\r\n            if (Object.prototype.hasOwnProperty.call(StateControl, key)) {\r\n                const state = StateControl[key];\r\n                if (state['ins'] && state['ins']['reset']) {\r\n                    state['ins']['reset']();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    StateControl.stateReset = stateReset;\r\n    function stateClear() {\r\n        for (const key in StateControl) {\r\n            if (Object.prototype.hasOwnProperty.call(StateControl, key)) {\r\n                const state = StateControl[key];\r\n                if (state['ins'] && state['ins']['actionStop']) {\r\n                    state['ins']['actionStop']();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    StateControl.stateClear = stateClear;\r\n    function Init() {\r\n        for (const key in StateControl) {\r\n            if (Object.prototype.hasOwnProperty.call(StateControl, key)) {\r\n                const state = StateControl[key];\r\n                const name = state['name'];\r\n                if (name && name && name !== 'Init' && name !== 'stateClear' && name !== 'stateBase' && name !== 'gPlayCrossFadeRole') {\r\n                    new state();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    StateControl.Init = Init;\r\n    class stateBase {\r\n    }\r\n    StateControl.stateBase = stateBase;\r\n    class Ready {\r\n        constructor() {\r\n            Ready.ins = this;\r\n            this.cameraPointFP = Role.ins.cameraPoint.transform.position.clone();\r\n            this.cameraPointFR = Role.ins.cameraPoint.transform.localRotationEuler.clone();\r\n            this.cameraFP = Role.ins.camera.transform.localPosition.clone();\r\n            this.cameraFR = Role.ins.camera.transform.localRotationEuler.clone();\r\n            this.roleFP = Role.ins.role.transform.localPosition.clone();\r\n            this.roleFS = Role.ins.role.transform.localScale.clone();\r\n            this.roleFR = Role.ins.role.transform.localRotationEuler.clone();\r\n        }\r\n        action() {\r\n            Role.ins.cameraPoint.transform.position = this.cameraPointFP;\r\n            Role.ins.cameraPoint.transform.localRotationEuler = this.cameraPointFR;\r\n            Role.ins.camera.transform.localPosition = this.cameraFP;\r\n            Role.ins.camera.transform.localRotationEuler = this.cameraFR;\r\n            Role.ins.role.transform.localPosition = this.roleFP;\r\n            Role.ins.role.transform.localScale = this.roleFS;\r\n            Role.ins.role.transform.localRotationEuler = this.roleFR;\r\n            Role.ins.changeSkin(GameData.Skin.getDefultName);\r\n            Laya.timer.frameLoop(1, this, () => {\r\n                Role.ins.updateLevelDisplay();\r\n            });\r\n        }\r\n        actionStop() {\r\n            Laya.timer.clearAll(this);\r\n        }\r\n    }\r\n    StateControl.Ready = Ready;\r\n    class Start {\r\n        constructor() {\r\n            Start.ins = this;\r\n        }\r\n        action(endCb) {\r\n            Laya.timer.frameLoop(1, this, () => {\r\n                Role.ins.updateLevelDisplay();\r\n            });\r\n            const time = 1000;\r\n            LwgAni3D.moveTo(Role.ins.cameraPoint, new Laya.Vector3(0, 0, 0), time, this, null, () => {\r\n            });\r\n            LwgAni3D.rotateTo(Role.ins.cameraPoint, new Laya.Vector3(0, 0, 0), time, this, null, () => {\r\n                endCb && endCb();\r\n            });\r\n        }\r\n        actionStop() {\r\n            Laya.timer.clearAll(this);\r\n        }\r\n    }\r\n    StateControl.Start = Start;\r\n    class MoveForward {\r\n        constructor() {\r\n            MoveForward.ins = this;\r\n            this.reset();\r\n        }\r\n        reset() {\r\n            this.speed = 0.25;\r\n        }\r\n        action() {\r\n            Laya.timer.frameLoop(1, this, this.actionCb);\r\n        }\r\n        actionCb() {\r\n            MainScene.ins.lenCur += this.speed;\r\n            Role.ins.cameraPoint.transform.translate(new Laya.Vector3(0, 0, this.speed), false);\r\n            Role.ins.role.transform.translate(new Laya.Vector3(0, 0, this.speed), false);\r\n            Role.ins.updateLevelDisplay();\r\n        }\r\n        actionStop() {\r\n            Laya.timer.clear(this, this.actionCb);\r\n        }\r\n    }\r\n    StateControl.MoveForward = MoveForward;\r\n    class MoveCrosswise {\r\n        constructor() {\r\n            MoveCrosswise.ins = this;\r\n            this.reset();\r\n        }\r\n        reset() {\r\n            this.speed = 0.05;\r\n            StateControl.gMoveScope = [-9, 9];\r\n            StateControl.gMoveCameraScope = [-6, 6];\r\n        }\r\n        action() {\r\n            Laya.stage.on(Laya.Event.MOUSE_MOVE, this, this.stageMove);\r\n            Laya.stage.on(Laya.Event.MOUSE_UP, this, this.stageUp);\r\n            Laya.stage.on(Laya.Event.MOUSE_OUT, this, this.stageUp);\r\n        }\r\n        stageMove(event) {\r\n            if (this.mouseX) {\r\n                this.setScopeLimit(Role.ins.cameraPoint, event);\r\n                this.setScopeLimit(Role.ins.role, event);\r\n                this.mouseX = event.stageX;\r\n            }\r\n            else {\r\n                this.mouseX = event.stageX;\r\n            }\r\n        }\r\n        setScopeLimit(target, e) {\r\n            let croMouseX = this.mouseX;\r\n            let diffX = e.stageX - croMouseX;\r\n            if (target == Role.ins.cameraPoint) {\r\n                target.transform.position = new Laya.Vector3(target.transform.position.x - diffX * this.speed * 0.6, 0, target.transform.position.z);\r\n            }\r\n            else {\r\n                target.transform.position = new Laya.Vector3(target.transform.position.x - diffX * this.speed, 0, target.transform.position.z);\r\n            }\r\n            const posTarget = target.transform.position.clone();\r\n            if (target == Role.ins.cameraPoint) {\r\n                if (target.transform.position.x < StateControl.gMoveCameraScope[0]) {\r\n                    target.transform.position = new Laya.Vector3(StateControl.gMoveCameraScope[0], posTarget.y, posTarget.z);\r\n                }\r\n                if (target.transform.position.x > StateControl.gMoveCameraScope[1]) {\r\n                    target.transform.position = new Laya.Vector3(StateControl.gMoveCameraScope[1], posTarget.y, posTarget.z);\r\n                }\r\n            }\r\n            else {\r\n                if (target.transform.position.x < StateControl.gMoveScope[0]) {\r\n                    target.transform.position = new Laya.Vector3(StateControl.gMoveScope[0], posTarget.y, posTarget.z);\r\n                }\r\n                if (target.transform.position.x > StateControl.gMoveScope[1]) {\r\n                    target.transform.position = new Laya.Vector3(StateControl.gMoveScope[1], posTarget.y, posTarget.z);\r\n                }\r\n            }\r\n        }\r\n        stageUp(e) {\r\n            this.mouseX = null;\r\n        }\r\n        actionStop() {\r\n            this.mouseX = null;\r\n            Laya.stage.off(Laya.Event.MOUSE_MOVE, this, this.stageMove);\r\n            Laya.stage.off(Laya.Event.MOUSE_UP, this, this.stageUp);\r\n            Laya.stage.off(Laya.Event.MOUSE_OUT, this, this.stageUp);\r\n        }\r\n    }\r\n    StateControl.MoveCrosswise = MoveCrosswise;\r\n    class Run {\r\n        constructor() {\r\n            Run.ins = this;\r\n        }\r\n        action() {\r\n            Role.ins.playAni(GameEnum.RoleAni.run);\r\n        }\r\n    }\r\n    StateControl.Run = Run;\r\n    class RoadNarrows {\r\n        constructor() {\r\n            this.arr0 = [];\r\n            this.arr1 = [];\r\n            RoadNarrows.ins = this;\r\n        }\r\n        reset() {\r\n            this.arr0 = [];\r\n            this.arr1 = [];\r\n        }\r\n        action(type, cuntinueCb) {\r\n            if (type === 1) {\r\n                this.arr1.push(1);\r\n                const limitR = 4;\r\n                let limitC = 2;\r\n                let time = 100;\r\n                const timeBase = 100;\r\n                if (Role.ins.role.transform.position.x > limitR) {\r\n                    time = Math.abs(limitR - Role.ins.role.transform.position.x) * timeBase;\r\n                    LwgAni3D.moveToX(Role.ins.role, limitR, time, this, null, () => {\r\n                        cuntinueCb && cuntinueCb();\r\n                    });\r\n                    limitC = limitR - Role.ins.role.transform.position.x;\r\n                    LwgAni3D.moveX(Role.ins.cameraPoint, limitC, time, this);\r\n                }\r\n                else if (Role.ins.role.transform.position.x < -limitR) {\r\n                    time = Math.abs(-limitR - Role.ins.role.transform.position.x) * timeBase;\r\n                    LwgAni3D.moveToX(Role.ins.role, -limitR, time, this, null, () => {\r\n                        cuntinueCb && cuntinueCb();\r\n                    });\r\n                    limitC = -limitR - Role.ins.role.transform.position.x;\r\n                    LwgAni3D.moveX(Role.ins.cameraPoint, limitC, time, this);\r\n                }\r\n                else {\r\n                    cuntinueCb && cuntinueCb();\r\n                }\r\n            }\r\n            else {\r\n                cuntinueCb && cuntinueCb();\r\n                this.arr0.push(0);\r\n            }\r\n            if (this.arr0.length < this.arr1.length) {\r\n                StateControl.gMoveScope = [-4, 4];\r\n                StateControl.gMoveCameraScope = [-2, 2];\r\n            }\r\n            else {\r\n                StateControl.gMoveScope = [-9, 9];\r\n                StateControl.gMoveCameraScope = [-6, 6];\r\n            }\r\n        }\r\n    }\r\n    StateControl.RoadNarrows = RoadNarrows;\r\n    StateControl.gGrowthValue = {\r\n        get value() {\r\n            return this['_value'] ? this['_value'] : 0;\r\n        },\r\n        set value(val) {\r\n            LwgEvent.notify(GameEvent.updateGrowthValue, [val, EatFood.ins.curLevel]);\r\n            this['_value'] = val;\r\n        }\r\n    };\r\n    class EatFood {\r\n        constructor() {\r\n            EatFood.ins = this;\r\n        }\r\n        reset() {\r\n            StateControl.gGrowthValue.value = GameData.Level.getInitGrowValue();\r\n            this.scaleMax = 2;\r\n            this.scaleMin = 1;\r\n            this.isTransformation = false;\r\n            this.curLevel = 1;\r\n        }\r\n        action(food, continueCb, defeatedCb) {\r\n            food.active = false;\r\n            if (this.isTransformation) {\r\n                continueCb && continueCb();\r\n                return;\r\n            }\r\n            let scale = -0.1;\r\n            let num = -1;\r\n            if (gForm.value.substr(0, 1) == 'b' || (food.name.substr(0, 5) === 'FoodA' && gForm.value.substr(0, 1) === 'v') || (food.name.substr(0, 5) === 'FoodB' && gForm.value.substr(0, 1) === 'm')) {\r\n                num = 1;\r\n                scale = 0.1;\r\n            }\r\n            StateControl.gGrowthValue.value += num * 3;\r\n            if (StateControl.gGrowthValue.value >= 100) {\r\n                if (gForm.value === GameEnum.FormState.meat2) {\r\n                    gForm.value = GameEnum.FormState.meat3;\r\n                    Role.ins.role.transform.localScale = new Laya.Vector3(1, 1, 1);\r\n                    this.isTransformation = true;\r\n                }\r\n                if (gForm.value === GameEnum.FormState.vegan2) {\r\n                    gForm.value = GameEnum.FormState.vegan3;\r\n                    Role.ins.role.transform.localScale = new Laya.Vector3(1, 1, 1);\r\n                    this.isTransformation = true;\r\n                }\r\n            }\r\n            else if (StateControl.gGrowthValue.value >= 50) {\r\n                if (gForm.value === GameEnum.FormState.meat1) {\r\n                    gForm.value = GameEnum.FormState.meat2;\r\n                    Role.ins.role.transform.localScale = new Laya.Vector3(1, 1, 1);\r\n                    this.isTransformation = true;\r\n                }\r\n                if (gForm.value === GameEnum.FormState.vegan1) {\r\n                    gForm.value = GameEnum.FormState.vegan2;\r\n                    Role.ins.role.transform.localScale = new Laya.Vector3(1, 1, 1);\r\n                    this.isTransformation = true;\r\n                }\r\n            }\r\n            if (num < 0) {\r\n                GameData.Sound.playSoundByID(8);\r\n            }\r\n            else {\r\n                GameData.Sound.playSoundByID(2);\r\n            }\r\n            if (StateControl.gGrowthValue.value <= 0) {\r\n                defeatedCb && defeatedCb();\r\n                return;\r\n            }\r\n            else {\r\n                if (this.isTransformation) {\r\n                    continueCb && continueCb();\r\n                    Transformation.ins.rotate(() => { }, () => {\r\n                        this.isTransformation = false;\r\n                    });\r\n                    return;\r\n                }\r\n            }\r\n            const scaleCur = Role.ins.role.transform.localScaleX;\r\n            let scaleNew = scaleCur + scale;\r\n            if (scaleNew > this.scaleMax) {\r\n                scaleNew = this.scaleMax;\r\n            }\r\n            if (scaleNew < this.scaleMin) {\r\n                scaleNew = this.scaleMin;\r\n            }\r\n            Role.ins.role.transform.localScale = new Laya.Vector3(scaleNew, scaleNew, scaleNew);\r\n            const type = food.name.substr(4, 1);\r\n            const v3 = Role.ins.role.transform.position.clone();\r\n            v3.z += 2;\r\n            if (type == 'A') {\r\n                Effect3D.ins.play_EatVegan(v3);\r\n            }\r\n            else if (type == 'B') {\r\n                Effect3D.ins.play_EatVegan(v3);\r\n            }\r\n            Role.ins.showFontHP(num, null, 100, -150);\r\n            continueCb && continueCb();\r\n        }\r\n    }\r\n    StateControl.EatFood = EatFood;\r\n    let gForm = {\r\n        get value() {\r\n            return this['_value'] ? this['_value'] : GameEnum.FormState.base;\r\n        },\r\n        set value(val) {\r\n            this['_value'] = val;\r\n            let name;\r\n            switch (val) {\r\n                case GameEnum.FormState.base:\r\n                    name = GameData.Skin.getDefultName;\r\n                    EatFood.ins.curLevel = 1;\r\n                    break;\r\n                case GameEnum.FormState.vegan1:\r\n                    name = GameData.Skin.getNameByVegan1;\r\n                    EatFood.ins.curLevel = 2;\r\n                    break;\r\n                case GameEnum.FormState.vegan2:\r\n                    name = GameData.Skin.getNameByVegan2;\r\n                    EatFood.ins.curLevel = 3;\r\n                    break;\r\n                case GameEnum.FormState.vegan3:\r\n                    name = GameData.Skin.getNameByVegan3;\r\n                    EatFood.ins.curLevel = 4;\r\n                    break;\r\n                case GameEnum.FormState.meat1:\r\n                    name = GameData.Skin.getNameByMeat1;\r\n                    EatFood.ins.curLevel = 2;\r\n                    break;\r\n                case GameEnum.FormState.meat2:\r\n                    name = GameData.Skin.getNameByMeat2;\r\n                    EatFood.ins.curLevel = 3;\r\n                    break;\r\n                case GameEnum.FormState.meat3:\r\n                    name = GameData.Skin.getNameByMeat3;\r\n                    EatFood.ins.curLevel = 4;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            Role.ins.changeSkin(name, GameEnum.RoleAni.run);\r\n        }\r\n    };\r\n    class Transformation {\r\n        constructor() {\r\n            this.isTransformation = false;\r\n            this.interval = 1000;\r\n            Transformation.ins = this;\r\n        }\r\n        reset() {\r\n            gForm.value = GameEnum.FormState.base;\r\n        }\r\n        action(door, cuntinueCb, passCb) {\r\n            cuntinueCb && cuntinueCb();\r\n            passCb && passCb();\r\n            if (this.isTransformation) {\r\n                return;\r\n            }\r\n            this.isTransformation = true;\r\n            this.rotate(() => {\r\n                LwgWX.shakeShort();\r\n                this.changeForm(door);\r\n            }, () => {\r\n                this.isTransformation = false;\r\n            });\r\n        }\r\n        rotate(middleCb, endCb) {\r\n            const time = 200;\r\n            const num = 3;\r\n            const angle = LwgTools.Num.randomOneHalf() === 0 ? 360 : -360;\r\n            LwgAni3D.scaleTo(Role.ins.role, new Laya.Vector3(0.8, 0.8, 0.8), time * num / 2, this, null, () => {\r\n                LwgAni3D.scaleTo(Role.ins.role, new Laya.Vector3(1, 1, 1), time * num / 2, this);\r\n            });\r\n            for (let index = 0; index < num; index++) {\r\n                LwgAni3D.rotateTo(Role.ins.role, new Laya.Vector3(0, angle, 0), time, this, null, () => {\r\n                    Role.ins.role.transform.localRotationEuler = new Laya.Vector3(0, 0, 0);\r\n                    if (index == 1) {\r\n                        middleCb && middleCb();\r\n                    }\r\n                    if (index === num - 1) {\r\n                        endCb && endCb();\r\n                    }\r\n                }, time * index);\r\n            }\r\n        }\r\n        changeForm(door) {\r\n            if (door.name === 'RoadMen01') {\r\n                if (StateControl.gGrowthValue.value >= 100) {\r\n                    gForm.value = GameEnum.FormState.meat3;\r\n                }\r\n                else if (StateControl.gGrowthValue.value >= 50) {\r\n                    gForm.value = GameEnum.FormState.meat2;\r\n                }\r\n                else {\r\n                    gForm.value = GameEnum.FormState.meat1;\r\n                }\r\n            }\r\n            else {\r\n                if (StateControl.gGrowthValue.value >= 100) {\r\n                    gForm.value = GameEnum.FormState.vegan3;\r\n                }\r\n                else if (StateControl.gGrowthValue.value >= 50) {\r\n                    gForm.value = GameEnum.FormState.vegan2;\r\n                }\r\n                else {\r\n                    gForm.value = GameEnum.FormState.vegan1;\r\n                }\r\n                LwgEvent.notify(GameEvent.changeBoss, [GameEnum.BOSSType.vegan]);\r\n            }\r\n        }\r\n    }\r\n    StateControl.Transformation = Transformation;\r\n    class Magma {\r\n        constructor() {\r\n            this.magmaArr = [];\r\n            Magma.ins = this;\r\n        }\r\n        reset() {\r\n            this.magmaArr = [];\r\n        }\r\n        action(magma, endCb) {\r\n            let element0 = null;\r\n            for (let index = 0; index < this.magmaArr.length; index++) {\r\n                const element = this.magmaArr[index];\r\n                if (element == magma) {\r\n                    element0 = element;\r\n                }\r\n            }\r\n            if (!element0) {\r\n                GameData.Sound.playBgmByID(10);\r\n                this.magmaArr.push(magma);\r\n                const sub = -1;\r\n                LwgTimer.frameLoop(15, magma, () => {\r\n                    Role.ins.showFontHP(sub, null, 100, -100);\r\n                    StateControl.gGrowthValue.value += sub;\r\n                    LwgWX.shakeShort();\r\n                }, true);\r\n            }\r\n            else {\r\n                Laya.timer.clearAll(magma);\r\n            }\r\n            endCb && endCb();\r\n        }\r\n    }\r\n    StateControl.Magma = Magma;\r\n    class Destination {\r\n        constructor() {\r\n            Destination.ins = this;\r\n        }\r\n        action() {\r\n            GameData.Sound.playBgmByID(12);\r\n            const time = 1000;\r\n            LwgAni3D.moveToX(Role.ins.cameraPoint, 0, time, this);\r\n            LwgAni3D.moveToX(Role.ins.role, 0, time, this);\r\n        }\r\n    }\r\n    StateControl.Destination = Destination;\r\n    function gPlayCrossFadeRole(aniName) {\r\n        const model = Role.ins.role.getChildAt(0);\r\n        const animator = model.getComponent(Laya.Animator);\r\n        const state = GameData.Animator.getClipNameByRoleNameAndAni(model.name, aniName);\r\n        animator.crossFade(state, 1);\r\n    }\r\n    function gPlayCrossFadeBoss(aniName) {\r\n        if (gBoss) {\r\n            const animator = gBoss.getComponent(Laya.Animator);\r\n            const state = GameData.Animator.getClipNameByRoleNameAndAni(gBoss.name, aniName);\r\n            animator.crossFade(state, 1);\r\n        }\r\n    }\r\n    function gPlayAniBoss(aniName) {\r\n        if (gBoss) {\r\n            const animator = gBoss.getComponent(Laya.Animator);\r\n            const state = GameData.Animator.getClipNameByRoleNameAndAni(gBoss.name, aniName);\r\n            animator.play(state);\r\n        }\r\n    }\r\n    let gBoss;\r\n    let gRoleFHp;\r\n    let gRoleHP;\r\n    class VSBOSS {\r\n        constructor() {\r\n            this.intervalAttack = 250;\r\n            VSBOSS.ins = this;\r\n            LwgEvent.register(GameEvent.attackByClick, this, () => {\r\n                if (!this.endVS) {\r\n                    const time = LwgDate.Now.time;\r\n                    if (time - this.curTimeAttack > this.intervalAttack) {\r\n                        this.roleAttack();\r\n                        this.curTimeAttack = time;\r\n                    }\r\n                    else {\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        reset() {\r\n            this.endVS = false;\r\n        }\r\n        action(bossBox, victoryCb, defeatedCb) {\r\n            LwgEvent.notify(GameEvent.readyVSBOSS);\r\n            gBoss = bossBox.parent;\r\n            this.BossHP = Math.round(GameData.Level.getBossHPByLevel());\r\n            LwgEvent.notify(GameEvent.updateBossHP, [this.BossHP]);\r\n            gRoleHP = Math.round(GameData.Skill.getHP() * StateControl.gGrowthValue.value);\r\n            LwgEvent.notify(GameEvent.updateRoleHP, [gRoleHP]);\r\n            gRoleFHp = gRoleHP;\r\n            this.curTimeAttack = LwgDate.Now.time;\r\n            gPlayCrossFadeRole(GameEnum.RoleAni.idle);\r\n            this.victoryCb = victoryCb;\r\n            const time = 1000;\r\n            LwgAni3D.moveToX(Role.ins.cameraPoint, -10, time, this);\r\n            LwgAni3D.rotateTo(Role.ins.cameraPoint, new Laya.Vector3(-20, 60, 0), time, this, null, () => {\r\n                gPlayAniBoss(GameEnum.RoleAni.show);\r\n                Laya.timer.once(3000, this, () => {\r\n                    LwgEvent.notify(GameEvent.attackByClickStart);\r\n                    this.bossAttack(defeatedCb);\r\n                });\r\n            });\r\n        }\r\n        bossAttack(defeatedCb) {\r\n            gPlayAniBoss(GameEnum.RoleAni.attack);\r\n            const aSpeedBoss = GameData.Level.getBossASpeedByLevel();\r\n            const attackBoss = GameData.Level.getBossAttackByLevel();\r\n            Laya.timer.loop(aSpeedBoss * 1000, this, () => {\r\n                gPlayAniBoss(GameEnum.RoleAni.idle);\r\n                gPlayAniBoss(GameEnum.RoleAni.attack);\r\n                gRoleHP = Math.round(gRoleHP - attackBoss);\r\n                Role.ins.showFontHP(-attackBoss, Role.ins.role, -100, -300);\r\n                LwgEvent.notify(GameEvent.updateRoleHP, [gRoleHP]);\r\n                if (gRoleHP <= 0) {\r\n                    this.actionStop();\r\n                    defeatedCb && defeatedCb();\r\n                    gPlayCrossFadeBoss(GameEnum.RoleAni.idle);\r\n                    LwgEvent.notify(GameEvent.attackByClickEnd);\r\n                    this.endVS = true;\r\n                }\r\n            });\r\n        }\r\n        roleAttack() {\r\n            Role.ins.playAni(GameEnum.RoleAni.idle);\r\n            Role.ins.playAni(GameEnum.RoleAni.attack);\r\n            const attackRole = GameData.Skill.getAttack();\r\n            Role.ins.showFontHP(-attackRole, gBoss, 100, Role.ins.role.transform.localScaleX * (-300 / 2));\r\n            this.BossHP = Math.round(this.BossHP - attackRole);\r\n            LwgEvent.notify(GameEvent.updateBossHP, [this.BossHP]);\r\n            if (this.BossHP <= 0) {\r\n                this.actionStop();\r\n                this.victoryCb && this.victoryCb();\r\n                gPlayCrossFadeBoss(GameEnum.RoleAni.death);\r\n                LwgEvent.notify(GameEvent.attackByClickEnd);\r\n                this.endVS = true;\r\n            }\r\n        }\r\n        actionStop() {\r\n            Laya.timer.clearAll(this);\r\n        }\r\n    }\r\n    StateControl.VSBOSS = VSBOSS;\r\n    class AccumulateStrength {\r\n        constructor() {\r\n            AccumulateStrength.ins = this;\r\n        }\r\n        action(victoryCb) {\r\n            Laya.timer.once(300, this, () => {\r\n                let coefficient = 0.5;\r\n                coefficient += gRoleHP / gRoleFHp;\r\n                const time1 = 2000 * 2;\r\n                const disZ = 100 * coefficient;\r\n                let num = Math.round((disZ - 20) / 15);\r\n                const score = GameData.LevelScore.getScoreByNum(num);\r\n                LwgEvent.notify(GameEvent.updateScore, [score + StateControl.gGrowthValue.value]);\r\n                const time2 = 1000;\r\n                const delay2 = 300;\r\n                LwgAni3D.moveToY(Role.ins.cameraPoint, 10, time2 / 2, this);\r\n                LwgAni3D.moveToX(Role.ins.cameraPoint, 0, time1, this);\r\n                LwgAni3D.rotateTo(Role.ins.cameraPoint, new Laya.Vector3(0, 0, 0), time2, this, null, null, delay2);\r\n                LwgAni3D.moveZ(Role.ins.cameraPoint, disZ - 20, time1, this);\r\n                LwgAni3D.moveZ(gBoss, disZ, time1, this, null, () => { });\r\n                const time4 = 1000;\r\n                const time5 = 450;\r\n                const time6 = 200;\r\n                const high1 = 20 * coefficient;\r\n                const high2 = 8 * coefficient;\r\n                const high3 = 2 * coefficient;\r\n                LwgAni3D.moveToY(gBoss, high1, time4, this, Laya.Ease.quintOut, () => {\r\n                    LwgAni3D.moveToY(gBoss, 0, time4, this, Laya.Ease.quintIn, () => {\r\n                        LwgAni3D.moveToY(gBoss, high2, time5, this, Laya.Ease.quintOut, () => {\r\n                            LwgAni3D.moveToY(gBoss, 0, time5, this, Laya.Ease.quintIn, () => {\r\n                                LwgAni3D.moveToY(gBoss, high3, time6, this, Laya.Ease.quintOut, () => {\r\n                                    LwgAni3D.moveToY(gBoss, 0, time6, this, Laya.Ease.quintIn, () => {\r\n                                        Laya.timer.once(1000, this, () => {\r\n                                            victoryCb && victoryCb();\r\n                                        });\r\n                                    });\r\n                                });\r\n                            });\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n        }\r\n        actionStop() {\r\n            Laya.timer.clearAll(this);\r\n        }\r\n    }\r\n    StateControl.AccumulateStrength = AccumulateStrength;\r\n    class Victory {\r\n        constructor() {\r\n            Victory.ins = this;\r\n        }\r\n        action() {\r\n            LwgEvent.notify(GameEvent.victory);\r\n        }\r\n    }\r\n    StateControl.Victory = Victory;\r\n    class Defeated {\r\n        constructor() {\r\n            Defeated.ins = this;\r\n        }\r\n        action() {\r\n            gPlayCrossFadeRole(GameEnum.RoleAni.death);\r\n            Laya.timer.once(1500, this, () => {\r\n                LwgEvent.notify(GameEvent.defeated);\r\n            });\r\n        }\r\n    }\r\n    StateControl.Defeated = Defeated;\r\n})(StateControl || (StateControl = {}));\r\n",
  "references": [
    "E:/SVN/老王哥/恐龙跑酷/DinosaursGrow_Laya_2.9.0/DinosaursGrowUp_2.9.0/src/ui/layaMaxUI.ts",
    "E:/SVN/老王哥/恐龙跑酷/DinosaursGrow_Laya_2.9.0/DinosaursGrowUp_2.9.0/src/script/Lwg/Lwg.ts",
    "E:/SVN/老王哥/恐龙跑酷/DinosaursGrow_Laya_2.9.0/DinosaursGrowUp_2.9.0/src/script/Game/Control/GameData.ts",
    "E:/SVN/老王哥/恐龙跑酷/DinosaursGrow_Laya_2.9.0/DinosaursGrowUp_2.9.0/src/script/Game/Control/GameEnum.ts",
    "E:/SVN/老王哥/恐龙跑酷/DinosaursGrow_Laya_2.9.0/DinosaursGrowUp_2.9.0/src/script/Game/Control/GameEvent.ts",
    "E:/SVN/老王哥/恐龙跑酷/DinosaursGrow_Laya_2.9.0/DinosaursGrowUp_2.9.0/src/script/Game/Control/GameRes.ts",
    "E:/SVN/老王哥/恐龙跑酷/DinosaursGrow_Laya_2.9.0/DinosaursGrowUp_2.9.0/src/script/Game/Game3D/Effect3D.ts",
    "E:/SVN/老王哥/恐龙跑酷/DinosaursGrow_Laya_2.9.0/DinosaursGrowUp_2.9.0/src/script/Game/Game3D/MainScene.ts"
  ]
}
