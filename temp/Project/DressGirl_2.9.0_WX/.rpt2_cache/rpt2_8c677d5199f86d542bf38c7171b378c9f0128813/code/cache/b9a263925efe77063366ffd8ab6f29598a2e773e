{
  "code": "import { Lwg3D, LwgAni3D, LwgControl, LwgCurrency, LwgDate, LwgDialogue, LwgEvent, LwgTimer, LwgTools, LwgWX } from \"../../Lwg/Lwg\";\r\nimport { GameData } from \"../Control/GameData\";\r\nimport { GameEnum } from \"../Control/GameEnum\";\r\nimport { GameEvent } from \"../Control/GameEvent\";\r\nimport { GameRes } from \"../Control/GameRes\";\r\nimport { Effect3D } from \"./Effect3D\";\r\nimport { MainScene } from \"./MainScene\";\r\nexport class Role {\r\n    constructor() {\r\n        Role.ins = this;\r\n        this.changeScene(MainScene.ins.scene);\r\n        StateControl.Init();\r\n    }\r\n    changeScene(scene) {\r\n        this.scene = scene;\r\n        this.cameraPoint = this.scene.getChildByName('CameraPoint');\r\n        this.camera = this.cameraPoint.getChildByName('Main Camera');\r\n        if (!this.scene.getChildByName('Role')) {\r\n            this.role = new Laya.Sprite3D;\r\n            this.role.name = 'Role';\r\n            this.scene.addChild(this.role);\r\n        }\r\n        else {\r\n            this.role = this.scene.getChildByName('Role');\r\n        }\r\n    }\r\n    setState(state, args) {\r\n        StateControl.stateClear();\r\n        switch (state) {\r\n            case GameEnum.RoleState.Ready:\r\n                StateControl.stateReset();\r\n                StateControl.Ready.ins.action();\r\n                break;\r\n            case GameEnum.RoleState.Start:\r\n                StateControl.stateReset();\r\n                StateControl.Start.ins.action(() => {\r\n                    this.setState(GameEnum.RoleState.Run, args);\r\n                });\r\n                break;\r\n            case GameEnum.RoleState.Run:\r\n                StateControl.MoveCrosswise.ins.action();\r\n                StateControl.MoveForward.ins.action(args);\r\n                StateControl.Run.ins.action();\r\n                break;\r\n            case GameEnum.RoleState.Magma:\r\n                StateControl.Magma.ins.action(args[0], args[1], () => {\r\n                    this.setState(GameEnum.RoleState.Run);\r\n                }, () => {\r\n                    this.setState(GameEnum.RoleState.Defeated);\r\n                });\r\n                break;\r\n            case GameEnum.RoleState.RoadNarrows:\r\n                StateControl.RoadNarrows.ins.action(args[0], () => {\r\n                    StateControl.MoveCrosswise.ins.action();\r\n                    StateControl.MoveForward.ins.action();\r\n                });\r\n                break;\r\n            case GameEnum.RoleState.EatFood:\r\n                StateControl.EatFood.ins.action(args[0], () => {\r\n                    this.setState(GameEnum.RoleState.Run);\r\n                }, () => {\r\n                    this.setState(GameEnum.RoleState.Defeated);\r\n                });\r\n                break;\r\n            case GameEnum.RoleState.Diamond:\r\n                StateControl.Diamond.ins.action(args[0], () => {\r\n                    this.setState(GameEnum.RoleState.Run);\r\n                });\r\n                break;\r\n            case GameEnum.RoleState.Stone:\r\n                StateControl.Stone.ins.action(args[0], () => {\r\n                    this.setState(GameEnum.RoleState.Run);\r\n                }, () => {\r\n                    this.setState(GameEnum.RoleState.Defeated);\r\n                });\r\n                break;\r\n            case GameEnum.RoleState.Egg:\r\n                StateControl.Egg.ins.action(args[0], () => {\r\n                    this.setState(GameEnum.RoleState.Run);\r\n                }, () => {\r\n                    this.setState(GameEnum.RoleState.Defeated);\r\n                });\r\n                break;\r\n            case GameEnum.RoleState.Transformation:\r\n                StateControl.Transformation.ins.action(args[0], () => {\r\n                    StateControl.MoveForward.ins.action();\r\n                }, () => {\r\n                    this.setState(GameEnum.RoleState.Run);\r\n                });\r\n                break;\r\n            case GameEnum.RoleState.Destination:\r\n                StateControl.Destination.ins.action(() => {\r\n                    StateControl.MoveForward.ins.action();\r\n                    StateControl.MoveForward.ins.speed *= 2;\r\n                });\r\n                break;\r\n            case GameEnum.RoleState.VSBOSS:\r\n                StateControl.VSBOSS.ins.action(args[0], () => {\r\n                    this.setState(GameEnum.RoleState.StrikeFly);\r\n                }, () => {\r\n                    this.setState(GameEnum.RoleState.Defeated);\r\n                });\r\n                break;\r\n            case GameEnum.RoleState.StrikeFly:\r\n                StateControl.StrikeFly.ins.action(() => {\r\n                    this.setState(GameEnum.RoleState.ShowEndReward);\r\n                });\r\n                break;\r\n            case GameEnum.RoleState.ShowEndReward:\r\n                StateControl.ShowEndReward.ins.action(() => {\r\n                    this.setState(GameEnum.RoleState.ReceiveAward);\r\n                });\r\n                break;\r\n            case GameEnum.RoleState.ReceiveAward:\r\n                StateControl.ReceiveAward.ins.action();\r\n                break;\r\n            case GameEnum.RoleState.Defeated:\r\n                StateControl.Defeated.ins.action();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.state = state;\r\n    }\r\n    playAniRole(aniName) {\r\n        const box = this.skin.getChildByName('box');\r\n        if (!box.getComponent(RoleScript)) {\r\n            box.addComponent(RoleScript);\r\n        }\r\n        const aniCilp = GameData.Animator.getClipNameByRoleNameAndAni(this.skin.name, aniName);\r\n        return LwgTools.D3.playAnimator(this.skin, aniCilp);\r\n    }\r\n    playAniCrossFade(roleSkin, aniName) {\r\n        const animator = this.skin.getComponent(Laya.Animator);\r\n        const aniCilp = GameData.Animator.getClipNameByRoleNameAndAni(roleSkin.name, aniName);\r\n        animator.crossFade(aniCilp, 1);\r\n    }\r\n    playAniByCommon(roleSkin, aniName) {\r\n        const aniCilp = GameData.Animator.getClipNameByRoleNameAndAni(roleSkin.name, aniName);\r\n        return LwgTools.D3.playAnimator(roleSkin, aniCilp);\r\n    }\r\n    changeSkin(name, aniName, sound = true) {\r\n        sound && GameData.Sound.playSoundByID(16);\r\n        for (let index = 0; index < this.role.numChildren; index++) {\r\n            const element = this.role.getChildAt(index);\r\n            if (element.name.substr(0, 4) === 'dino') {\r\n                element.destroy(true);\r\n                index--;\r\n            }\r\n        }\r\n        this.skin = GameRes.Prefab3D[name].instance.clone();\r\n        this.role.addChild(this.skin);\r\n        this.skin.transform.localPosition = new Laya.Vector3(0, 0, 0);\r\n        const box = this.skin.getChildByName('box');\r\n        if (!box.getComponent(RoleScript)) {\r\n            box.addComponent(RoleScript);\r\n        }\r\n        if (aniName) {\r\n            const aniCilp = GameData.Animator.getClipNameByRoleNameAndAni(this.skin.name, GameEnum.RoleAni.run);\r\n            LwgTools.D3.playAnimator(this.skin, aniCilp);\r\n        }\r\n        LwgEvent.notify(GameEvent.updateHead, [this.skin.name]);\r\n    }\r\n    showFontHP(num, sp3D, diffX, diffY) {\r\n        const sp3d0 = sp3D ? sp3D : Role.ins.role;\r\n        const point = LwgTools.D3.getPosToScreen(sp3d0.transform.position, Role.ins.camera);\r\n        let color = '#ff5547';\r\n        if (num >= 0) {\r\n            color = '#56ff47';\r\n        }\r\n        const numStr = num > 0 ? '+' + num.toString() : num.toString();\r\n        let diffX0 = diffX === undefined ? 100 : diffX;\r\n        let diffY0 = diffY === undefined ? 100 : diffY;\r\n        const scale = sp3d0.transform.localScaleX;\r\n        diffX0 *= scale;\r\n        diffY0 *= scale;\r\n        LwgDialogue.FloatWord.createFontSystem(point.x + diffX0, point.y + diffY0, { content: numStr, color: color }, 1, false);\r\n        LwgWX.shakeShort();\r\n    }\r\n    showFontAttribute(str) {\r\n        let color = '#56ff47';\r\n        const point = LwgTools.D3.getPosToScreen(Role.ins.role.transform.position, Role.ins.camera);\r\n        point.y -= this.role.transform.localScaleX * 100;\r\n        point.y -= 50;\r\n        LwgDialogue.FloatWord.createFontSystem(point.x, point.y, { content: str, color: color }, 1, false);\r\n        LwgWX.shakeShort();\r\n    }\r\n    updateLevelDisplay() {\r\n        const point = LwgTools.D3.getPosToScreen(Role.ins.role.transform.position, Role.ins.camera);\r\n        point.y -= this.role.transform.localScaleX * 100;\r\n        point.y -= 50;\r\n        LwgEvent.notify(GameEvent.updateLevelDisplay, [point]);\r\n    }\r\n}\r\nclass RoleScript extends Lwg3D.Object3D {\r\n    onTriggerEnter(other) {\r\n        const otherOwner = other.owner;\r\n        const name = otherOwner.name;\r\n        if (otherOwner['alreadyEn']) {\r\n            return;\r\n        }\r\n        otherOwner['alreadyEn'] = true;\r\n        if (name == 'RoadMen01' || name == 'RoadMen02') {\r\n            Role.ins.setState(GameEnum.RoleState.Transformation, [otherOwner]);\r\n        }\r\n        else if (name.substr(0, 4) == 'Food') {\r\n            Role.ins.setState(GameEnum.RoleState.EatFood, [otherOwner]);\r\n        }\r\n        else if (name === 'destination') {\r\n            Role.ins.setState(GameEnum.RoleState.Destination, [otherOwner]);\r\n        }\r\n        else if (name === 'box') {\r\n            Role.ins.setState(GameEnum.RoleState.VSBOSS, [otherOwner]);\r\n        }\r\n        else if (name.substr(0, 12) === 'yanjiang') {\r\n            Role.ins.setState(GameEnum.RoleState.Magma, [otherOwner, true]);\r\n        }\r\n        else if (name === 'Road_Base02') {\r\n            Role.ins.setState(GameEnum.RoleState.RoadNarrows, [1]);\r\n        }\r\n        else if (name.substr(0, 6) === 'good02') {\r\n            Role.ins.setState(GameEnum.RoleState.Diamond, [otherOwner]);\r\n        }\r\n        else if (name === 'egg') {\r\n            Role.ins.setState(GameEnum.RoleState.Egg, [otherOwner]);\r\n        }\r\n        else if (name.substr(0, 15) === 'Scenc_zhangai01') {\r\n            Role.ins.setState(GameEnum.RoleState.Stone, [otherOwner]);\r\n        }\r\n    }\r\n    onTriggerExit(other) {\r\n        const otherOwner = other.owner;\r\n        const name = otherOwner.name;\r\n        if (name.substr(0, 12) === 'yanjiang') {\r\n            if (otherOwner['alreadyEX']) {\r\n                return;\r\n            }\r\n            otherOwner['alreadyEX'] = true;\r\n            Role.ins.setState(GameEnum.RoleState.Magma, [otherOwner]);\r\n        }\r\n        else if (name === 'Road_Base02') {\r\n            Role.ins.setState(GameEnum.RoleState.RoadNarrows, [0]);\r\n        }\r\n    }\r\n}\r\nexport class aniScript extends Lwg3D.Object3D {\r\n    lwgOnAwake() {\r\n    }\r\n    attackEnd() {\r\n        const animator = this.owner.getComponent(Laya.Animator);\r\n        const state = GameData.Animator.getClipNameByRoleNameAndAni(this.owner.name, GameEnum.RoleAni.idle);\r\n        animator.crossFade(state, 1);\r\n    }\r\n}\r\nvar StateControl;\r\n(function (StateControl) {\r\n    function stateReset() {\r\n        for (const key in StateControl) {\r\n            if (Object.prototype.hasOwnProperty.call(StateControl, key)) {\r\n                const state = StateControl[key];\r\n                if (state['ins'] && state['ins']['reset']) {\r\n                    state['ins']['reset']();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    StateControl.stateReset = stateReset;\r\n    function stateClear() {\r\n        for (const key in StateControl) {\r\n            if (Object.prototype.hasOwnProperty.call(StateControl, key)) {\r\n                const state = StateControl[key];\r\n                if (state['ins'] && state['ins']['actionStop']) {\r\n                    state['ins']['actionStop']();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    StateControl.stateClear = stateClear;\r\n    function Init() {\r\n        for (const key in StateControl) {\r\n            if (Object.prototype.hasOwnProperty.call(StateControl, key)) {\r\n                const state = StateControl[key];\r\n                const name = state['name'];\r\n                if (name && name && name !== 'Init' && name !== 'stateClear' && name !== 'stateBase') {\r\n                    new state();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    StateControl.Init = Init;\r\n    class stateBase {\r\n    }\r\n    StateControl.stateBase = stateBase;\r\n    class Ready {\r\n        constructor() {\r\n            Ready.ins = this;\r\n        }\r\n        action() {\r\n            Role.ins.cameraPoint.transform.position = new Laya.Vector3(8.9, -6.9, -15);\r\n            Role.ins.cameraPoint.transform.localRotationEuler = new Laya.Vector3(-10, 150, 0);\r\n            Role.ins.role.transform.localPosition = new Laya.Vector3(0, 0, 0);\r\n            Role.ins.role.transform.localScale = new Laya.Vector3(1, 1, 1);\r\n            Role.ins.role.transform.localRotationEuler = new Laya.Vector3(0, 0, 0);\r\n            Form.value = GameEnum.FormState.base;\r\n            Role.ins.playAniRole(GameEnum.RoleAni.idle);\r\n            Laya.timer.frameLoop(1, this, () => {\r\n                Role.ins.updateLevelDisplay();\r\n            });\r\n        }\r\n        actionStop() {\r\n            Laya.timer.clearAll(this);\r\n        }\r\n    }\r\n    StateControl.Ready = Ready;\r\n    class Start {\r\n        constructor() {\r\n            Start.ins = this;\r\n        }\r\n        action(endCb) {\r\n            Laya.timer.frameLoop(1, this, () => {\r\n                Role.ins.updateLevelDisplay();\r\n            });\r\n            const time = 1000;\r\n            LwgAni3D.moveTo(Role.ins.cameraPoint, new Laya.Vector3(0, 0, 0), time, this, null, () => {\r\n            });\r\n            LwgAni3D.rotateTo(Role.ins.cameraPoint, new Laya.Vector3(0, 0, 0), time, this, null, () => {\r\n                endCb && endCb();\r\n            });\r\n        }\r\n        actionStop() {\r\n            Laya.timer.clearAll(this);\r\n        }\r\n    }\r\n    StateControl.Start = Start;\r\n    class MoveForward {\r\n        constructor() {\r\n            this.sprintCaller = {};\r\n            MoveForward.ins = this;\r\n            this.reset();\r\n        }\r\n        get sprintTime() {\r\n            if (GameData.Level.mode === GameEnum.LevelMode.endless) {\r\n                return 10000;\r\n            }\r\n            else {\r\n                return 5000;\r\n            }\r\n        }\r\n        reset() {\r\n            this.speedBase = 0.25;\r\n            this.speed = this.speedBase;\r\n        }\r\n        action(args = []) {\r\n            Laya.timer.frameLoop(1, this, this.actionCb);\r\n            if (args[0]) {\r\n                this.sprintProps();\r\n            }\r\n        }\r\n        actionCb() {\r\n            LwgEvent.notify(GameEvent.addMileageCur, [this.speed]);\r\n            Role.ins.cameraPoint.transform.translate(new Laya.Vector3(0, 0, this.speed), false);\r\n            Role.ins.role.transform.translate(new Laya.Vector3(0, 0, this.speed), false);\r\n            Role.ins.updateLevelDisplay();\r\n        }\r\n        sprintProps() {\r\n            this.sprintEff && this.sprintEff.destroy(true);\r\n            this.sprintEff = Effect3D.ins.play_Chongci(Role.ins.role.transform.position, Role.ins.role);\r\n            Laya.timer.clearAll(this.sprintCaller);\r\n            this.speed = 0.25 * 2;\r\n            this.sprint = true;\r\n            Laya.timer.once(this.sprintTime, this.sprintCaller, () => {\r\n                this.sprint = false;\r\n                LwgTimer.frameNumLoop(1, 30, this, () => {\r\n                    this.speed - 0.25 / 30;\r\n                }, () => {\r\n                    this.speed = 0.25;\r\n                    this.sprintEff && this.sprintEff.destroy(true);\r\n                });\r\n            });\r\n        }\r\n        actionStop() {\r\n            Laya.timer.clear(this, this.actionCb);\r\n        }\r\n    }\r\n    StateControl.MoveForward = MoveForward;\r\n    class MoveCrosswise {\r\n        constructor() {\r\n            MoveCrosswise.ins = this;\r\n            this.reset();\r\n        }\r\n        reset() {\r\n            this.speed = 0.05;\r\n            StateControl.gMoveScope = [-9, 9];\r\n            StateControl.gMoveCameraScope = [-6, 6];\r\n        }\r\n        action() {\r\n            Laya.stage.on(Laya.Event.MOUSE_MOVE, this, this.stageMove);\r\n            Laya.stage.on(Laya.Event.MOUSE_UP, this, this.stageUp);\r\n            Laya.stage.on(Laya.Event.MOUSE_OUT, this, this.stageUp);\r\n        }\r\n        stageMove(event) {\r\n            if (this.mouseX) {\r\n                this.setScopeLimit(Role.ins.cameraPoint, event);\r\n                this.setScopeLimit(Role.ins.role, event);\r\n                this.mouseX = event.stageX;\r\n            }\r\n            else {\r\n                this.mouseX = event.stageX;\r\n            }\r\n        }\r\n        setScopeLimit(target, e) {\r\n            let croMouseX = this.mouseX;\r\n            let diffX = e.stageX - croMouseX;\r\n            if (target == Role.ins.cameraPoint) {\r\n                target.transform.position = new Laya.Vector3(target.transform.position.x - diffX * this.speed * 0.6, 0, target.transform.position.z);\r\n            }\r\n            else {\r\n                target.transform.position = new Laya.Vector3(target.transform.position.x - diffX * this.speed, 0, target.transform.position.z);\r\n            }\r\n            const posTarget = target.transform.position.clone();\r\n            if (target == Role.ins.cameraPoint) {\r\n                if (target.transform.position.x < StateControl.gMoveCameraScope[0]) {\r\n                    target.transform.position = new Laya.Vector3(StateControl.gMoveCameraScope[0], posTarget.y, posTarget.z);\r\n                }\r\n                if (target.transform.position.x > StateControl.gMoveCameraScope[1]) {\r\n                    target.transform.position = new Laya.Vector3(StateControl.gMoveCameraScope[1], posTarget.y, posTarget.z);\r\n                }\r\n            }\r\n            else {\r\n                if (target.transform.position.x < StateControl.gMoveScope[0]) {\r\n                    target.transform.position = new Laya.Vector3(StateControl.gMoveScope[0], posTarget.y, posTarget.z);\r\n                }\r\n                if (target.transform.position.x > StateControl.gMoveScope[1]) {\r\n                    target.transform.position = new Laya.Vector3(StateControl.gMoveScope[1], posTarget.y, posTarget.z);\r\n                }\r\n            }\r\n        }\r\n        stageUp(e) {\r\n            this.mouseX = null;\r\n        }\r\n        actionStop() {\r\n            this.mouseX = null;\r\n            Laya.stage.off(Laya.Event.MOUSE_MOVE, this, this.stageMove);\r\n            Laya.stage.off(Laya.Event.MOUSE_UP, this, this.stageUp);\r\n            Laya.stage.off(Laya.Event.MOUSE_OUT, this, this.stageUp);\r\n        }\r\n    }\r\n    StateControl.MoveCrosswise = MoveCrosswise;\r\n    class Run {\r\n        constructor() {\r\n            Run.ins = this;\r\n        }\r\n        action() {\r\n            Role.ins.playAniRole(GameEnum.RoleAni.run);\r\n        }\r\n    }\r\n    StateControl.Run = Run;\r\n    class RoadNarrows {\r\n        constructor() {\r\n            this.arr0 = [];\r\n            this.arr1 = [];\r\n            RoadNarrows.ins = this;\r\n        }\r\n        reset() {\r\n            this.arr0 = [];\r\n            this.arr1 = [];\r\n        }\r\n        action(type, cuntinueCb) {\r\n            if (type === 1) {\r\n                this.arr1.push(1);\r\n                const limitR = 4;\r\n                let limitC = 2;\r\n                let time = 100;\r\n                const timeBase = 100;\r\n                if (Role.ins.role.transform.position.x > limitR) {\r\n                    time = Math.abs(limitR - Role.ins.role.transform.position.x) * timeBase;\r\n                    LwgAni3D.moveToX(Role.ins.role, limitR, time, this, null, () => {\r\n                        cuntinueCb && cuntinueCb();\r\n                    });\r\n                    limitC = limitR - Role.ins.role.transform.position.x;\r\n                    LwgAni3D.moveX(Role.ins.cameraPoint, limitC, time, this);\r\n                }\r\n                else if (Role.ins.role.transform.position.x < -limitR) {\r\n                    time = Math.abs(-limitR - Role.ins.role.transform.position.x) * timeBase;\r\n                    LwgAni3D.moveToX(Role.ins.role, -limitR, time, this, null, () => {\r\n                        cuntinueCb && cuntinueCb();\r\n                    });\r\n                    limitC = -limitR - Role.ins.role.transform.position.x;\r\n                    LwgAni3D.moveX(Role.ins.cameraPoint, limitC, time, this);\r\n                }\r\n                else {\r\n                    cuntinueCb && cuntinueCb();\r\n                }\r\n            }\r\n            else {\r\n                cuntinueCb && cuntinueCb();\r\n                this.arr0.push(0);\r\n            }\r\n            if (this.arr0.length < this.arr1.length) {\r\n                StateControl.gMoveScope = [-4, 4];\r\n                StateControl.gMoveCameraScope = [-2, 2];\r\n            }\r\n            else {\r\n                StateControl.gMoveScope = [-9, 9];\r\n                StateControl.gMoveCameraScope = [-6, 6];\r\n            }\r\n        }\r\n    }\r\n    StateControl.RoadNarrows = RoadNarrows;\r\n    class Diamond {\r\n        constructor() {\r\n            this.addNum = 5;\r\n            this.sumNum = 0;\r\n            Diamond.ins = this;\r\n        }\r\n        reset() {\r\n            this.sumNum = 0;\r\n        }\r\n        action(diamond, continueCb) {\r\n            GameData.Sound.playSoundByID(2);\r\n            diamond.removeSelf();\r\n            this.sumNum += this.addNum;\r\n            continueCb && continueCb();\r\n            Effect3D.ins.play_Right(Role.ins.role.transform.position.clone(), Role.ins.skin);\r\n            const point = LwgTools.D3.getPosToScreen(Role.ins.role.transform.position, Role.ins.camera);\r\n            LwgCurrency.Diamond.playGetSingleAni(Laya.stage, 1, 40, 35, 'Game/UI/img_icon_money_01.png', new Laya.Point(point.x, point.y - 250), new Laya.Point(100, 100), null, () => {\r\n                LwgEvent.notify(GameEvent.updateDiamond, [this.sumNum]);\r\n            });\r\n        }\r\n    }\r\n    StateControl.Diamond = Diamond;\r\n    class Stone {\r\n        constructor() {\r\n            this.num = 2;\r\n            Stone.ins = this;\r\n        }\r\n        action(stone, cuntinueCb, defeatedCb) {\r\n            stone.removeSelf();\r\n            Effect3D.ins.play_Stone(Role.ins.role.transform.position.clone());\r\n            GameData.Sound.playSoundByID(8);\r\n            if (MoveForward.ins.sprint) {\r\n                cuntinueCb && cuntinueCb();\r\n            }\r\n            else {\r\n                EatFood.ins.growthValue -= this.num;\r\n                if (EatFood.ins.growthValue <= 0) {\r\n                    defeatedCb && defeatedCb();\r\n                    Effect3D.ins.play_Error(Role.ins.role.transform.position.clone(), Role.ins.skin);\r\n                }\r\n                else {\r\n                    cuntinueCb && cuntinueCb();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    StateControl.Stone = Stone;\r\n    class Egg {\r\n        constructor() {\r\n            this.addNum = 3;\r\n            this.subNum = -2;\r\n            Egg.ins = this;\r\n        }\r\n        action(egg, cuntinueCb, defeatedCb) {\r\n            egg.parent.removeSelf();\r\n            let num = Math.random() * 100 > 33 ? this.addNum : this.subNum;\r\n            if (MoveForward.ins.sprint && num < 0) {\r\n                num = 0;\r\n            }\r\n            EatFood.ins.growthValue += num;\r\n            if (num <= 0) {\r\n                defeatedCb && defeatedCb();\r\n                GameData.Sound.playSoundByID(8);\r\n                Effect3D.ins.play_Error(Role.ins.role.transform.position.clone(), Role.ins.skin);\r\n            }\r\n            else {\r\n                cuntinueCb && cuntinueCb();\r\n                GameData.Sound.playSoundByID(2);\r\n                Effect3D.ins.play_Right(Role.ins.role.transform.position.clone(), Role.ins.skin);\r\n            }\r\n        }\r\n    }\r\n    StateControl.Egg = Egg;\r\n    class EatFood {\r\n        constructor() {\r\n            EatFood.ins = this;\r\n        }\r\n        get growthValue() {\r\n            return this['_value'] ? this['_value'] : 0;\r\n        }\r\n        ;\r\n        set growthValue(val) {\r\n            LwgEvent.notify(GameEvent.updateGrowthValue, [val, EatFood.ins.curLevel]);\r\n            this['_value'] = val;\r\n        }\r\n        reset() {\r\n            if (GameData.Level.mode == GameEnum.LevelMode.common) {\r\n                this.growthValue = GameData.Level.getCommonStartChild();\r\n            }\r\n            else {\r\n                this.growthValue = GameData.Level.getEndlessStartChild();\r\n            }\r\n            this.scaleMin = 1;\r\n            this.scaleMax = 1.2;\r\n            this.isTransformation = false;\r\n            this.curLevel = 1;\r\n        }\r\n        action(food, continueCb, defeatedCb) {\r\n            this.defeatedCb = defeatedCb;\r\n            food.active = false;\r\n            if (this.isTransformation) {\r\n                continueCb && continueCb();\r\n                return;\r\n            }\r\n            let scale = -GameData.Level.eatFoodScale;\r\n            let num;\r\n            if (MoveForward.ins.sprint) {\r\n                num = 0;\r\n            }\r\n            else {\r\n                num = -2;\r\n            }\r\n            if (Form.value.substr(0, 1) == 'b' || (food.name.substr(0, 5) === 'FoodA' && Form.value.substr(0, 1) === 'v') || (food.name.substr(0, 5) === 'FoodB' && Form.value.substr(0, 1) === 'm')) {\r\n                num = 1;\r\n                scale = GameData.Level.eatFoodScale;\r\n            }\r\n            if (Role.ins.skin.name === 'dino_201') {\r\n                scale = GameData.Level.eatFoodScaleByBaby;\r\n            }\r\n            this.growthValue += num * 1;\r\n            this.changeForm();\r\n            if (num < 0) {\r\n                Effect3D.ins.play_Error(Role.ins.role.transform.position.clone(), Role.ins.skin);\r\n                GameData.Sound.playSoundByID(8);\r\n            }\r\n            else {\r\n                Effect3D.ins.play_Right(Role.ins.role.transform.position.clone(), Role.ins.skin);\r\n                GameData.Sound.playSoundByID(2);\r\n            }\r\n            if (this.growthValue <= 0) {\r\n                defeatedCb && defeatedCb();\r\n                return;\r\n            }\r\n            else {\r\n                if (this.isTransformation) {\r\n                    continueCb && continueCb();\r\n                    Effect3D.ins.play_Change(Role.ins.role.transform.position.clone(), Role.ins.role);\r\n                    Laya.timer.once(Transformation.ins.transInterval, {}, () => {\r\n                        this.isTransformation = false;\r\n                    });\r\n                    return;\r\n                }\r\n            }\r\n            this.changeScale(scale);\r\n            continueCb && continueCb();\r\n        }\r\n        changeForm() {\r\n            var change = () => {\r\n                Role.ins.role.transform.localScale = new Laya.Vector3(1, 1, 1);\r\n                this.isTransformation = true;\r\n                this.scaleMax = this.getScale();\r\n            };\r\n            if (this.growthValue >= GameData.Level.upgradeValue * 2) {\r\n                if (Form.value === GameEnum.FormState.meat2) {\r\n                    Form.value = GameEnum.FormState.meat3;\r\n                    change();\r\n                }\r\n                if (Form.value === GameEnum.FormState.vegan2) {\r\n                    Form.value = GameEnum.FormState.vegan3;\r\n                    change();\r\n                }\r\n            }\r\n            else if (this.growthValue >= GameData.Level.upgradeValue) {\r\n                if (Form.value === GameEnum.FormState.meat1) {\r\n                    Form.value = GameEnum.FormState.meat2;\r\n                    change();\r\n                }\r\n                if (Form.value === GameEnum.FormState.vegan1) {\r\n                    Form.value = GameEnum.FormState.vegan2;\r\n                    change();\r\n                }\r\n            }\r\n        }\r\n        changeScale(scale) {\r\n            const scaleCur = Role.ins.role.transform.localScaleX;\r\n            let scaleNew = scaleCur + scale;\r\n            if (scaleNew > this.scaleMax) {\r\n                scaleNew = this.scaleMax;\r\n            }\r\n            if (scaleNew < this.scaleMin) {\r\n                scaleNew = this.scaleMin;\r\n            }\r\n            Role.ins.role.transform.localScale = new Laya.Vector3(scaleNew, scaleNew, scaleNew);\r\n        }\r\n        getScale() {\r\n            let scale = 1.2;\r\n            switch (Form.value) {\r\n                case GameEnum.FormState.base:\r\n                    scale = 1.2;\r\n                    break;\r\n                case GameEnum.FormState.vegan1:\r\n                    scale = 1.5;\r\n                    break;\r\n                case GameEnum.FormState.vegan2:\r\n                    scale = 1.5;\r\n                    break;\r\n                case GameEnum.FormState.vegan3:\r\n                    scale = 2;\r\n                    break;\r\n                case GameEnum.FormState.meat1:\r\n                    scale = 1.5;\r\n                    break;\r\n                case GameEnum.FormState.meat2:\r\n                    scale = 1.5;\r\n                    break;\r\n                case GameEnum.FormState.meat3:\r\n                    scale = 2;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            return scale;\r\n        }\r\n    }\r\n    StateControl.EatFood = EatFood;\r\n    class Form {\r\n        static get value() {\r\n            return this['_value'] ? this['_value'] : GameEnum.FormState.base;\r\n        }\r\n        ;\r\n        static set value(val) {\r\n            this['_value'] = val;\r\n            let name;\r\n            let sound = true;\r\n            switch (val) {\r\n                case GameEnum.FormState.base:\r\n                    name = GameData.Skin.getBaseName;\r\n                    EatFood.ins.curLevel = 1;\r\n                    sound = false;\r\n                    break;\r\n                case GameEnum.FormState.vegan1:\r\n                    name = GameData.Skin.getNameByVegan1;\r\n                    EatFood.ins.curLevel = 1;\r\n                    break;\r\n                case GameEnum.FormState.vegan2:\r\n                    name = GameData.Skin.getNameByVegan2;\r\n                    EatFood.ins.curLevel = 2;\r\n                    break;\r\n                case GameEnum.FormState.vegan3:\r\n                    name = GameData.Skin.getNameByVegan3;\r\n                    EatFood.ins.curLevel = 3;\r\n                    break;\r\n                case GameEnum.FormState.meat1:\r\n                    name = GameData.Skin.getNameByMeat1;\r\n                    EatFood.ins.curLevel = 1;\r\n                    break;\r\n                case GameEnum.FormState.meat2:\r\n                    name = GameData.Skin.getNameByMeat2;\r\n                    EatFood.ins.curLevel = 2;\r\n                    break;\r\n                case GameEnum.FormState.meat3:\r\n                    name = GameData.Skin.getNameByMeat3;\r\n                    EatFood.ins.curLevel = 3;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            Role.ins.changeSkin(name, GameEnum.RoleAni.run, sound);\r\n        }\r\n    }\r\n    StateControl.Form = Form;\r\n    class Transformation {\r\n        constructor() {\r\n            this.isTransformation = false;\r\n            this.transInterval = 300;\r\n            Transformation.ins = this;\r\n        }\r\n        reset() {\r\n            Form.value = GameEnum.FormState.base;\r\n        }\r\n        action(door, cuntinueCb, passCb) {\r\n            cuntinueCb && cuntinueCb();\r\n            passCb && passCb();\r\n            if (this.isTransformation) {\r\n                return;\r\n            }\r\n            this.isTransformation = true;\r\n            LwgWX.shakeShort();\r\n            this.changeForm(door);\r\n            Effect3D.ins.play_Change(Role.ins.role.transform.position.clone(), Role.ins.role);\r\n            Laya.timer.once(this.transInterval, {}, () => {\r\n                this.isTransformation = false;\r\n            });\r\n        }\r\n        changeForm(door) {\r\n            if (door.name === 'RoadMen01') {\r\n                if (EatFood.ins.growthValue >= GameData.Level.upgradeValue * 2) {\r\n                    Form.value = GameEnum.FormState.meat3;\r\n                }\r\n                else if (EatFood.ins.growthValue >= GameData.Level.upgradeValue) {\r\n                    Form.value = GameEnum.FormState.meat2;\r\n                }\r\n                else {\r\n                    Form.value = GameEnum.FormState.meat1;\r\n                }\r\n                LwgEvent.notify(GameEvent.changeBoss, [GameEnum.RoleType.meat]);\r\n            }\r\n            else {\r\n                if (EatFood.ins.growthValue >= GameData.Level.upgradeValue * 2) {\r\n                    Form.value = GameEnum.FormState.vegan3;\r\n                }\r\n                else if (EatFood.ins.growthValue >= GameData.Level.upgradeValue) {\r\n                    Form.value = GameEnum.FormState.vegan2;\r\n                }\r\n                else {\r\n                    Form.value = GameEnum.FormState.vegan1;\r\n                }\r\n                LwgEvent.notify(GameEvent.changeBoss, [GameEnum.RoleType.vegan]);\r\n            }\r\n            LwgEvent.notify(GameEvent.updateGrowthValue, [EatFood.ins.growthValue, EatFood.ins.curLevel]);\r\n        }\r\n    }\r\n    StateControl.Transformation = Transformation;\r\n    class Magma {\r\n        constructor() {\r\n            this.magmaArr = [];\r\n            this.magmaAllArr = [];\r\n            this.intoIndex = 0;\r\n            this.outIndex = 0;\r\n            Magma.ins = this;\r\n        }\r\n        reset() {\r\n            this.magmaArr = [];\r\n            this.magmaAllArr = [];\r\n        }\r\n        action(magma, into, continueCb, defeatedCb) {\r\n            continueCb && continueCb();\r\n            this.defeatedCb = defeatedCb;\r\n            let element0 = null;\r\n            let index0 = 0;\r\n            for (let index = 0; index < this.magmaArr.length; index++) {\r\n                const element = this.magmaArr[index];\r\n                if (element == magma) {\r\n                    element0 = element;\r\n                    index0 = index;\r\n                }\r\n            }\r\n            if (!element0) {\r\n                this.magmaArr.push(magma);\r\n                this.intoIndex++;\r\n                console.log('进入岩浆!', this.intoIndex);\r\n            }\r\n            else {\r\n                this.magmaArr.splice(index0, 1);\r\n                this.outIndex++;\r\n                console.log('离开岩浆!', this.outIndex);\r\n            }\r\n            console.log(this.magmaArr.length);\r\n            Laya.timer.clearAll(this.magmaArr);\r\n            if (this.magmaArr.length > 0) {\r\n                this.subHp();\r\n                Laya.timer.once(380, this.magmaArr, () => {\r\n                    this.subHp();\r\n                });\r\n            }\r\n        }\r\n        subHp() {\r\n            GameData.Sound.playSoundByID(10);\r\n            if (MoveForward.ins.sprint) {\r\n                EatFood.ins.growthValue -= 0;\r\n            }\r\n            else {\r\n                EatFood.ins.growthValue -= 1;\r\n            }\r\n            EatFood.ins.changeScale(-GameData.Level.eatFoodScale);\r\n            LwgWX.shakeShort();\r\n            if (EatFood.ins.growthValue <= 0) {\r\n                this.defeatedCb && this.defeatedCb();\r\n            }\r\n        }\r\n        clearAllMagma() {\r\n            for (let index = 0; index < this.magmaArr.length; index++) {\r\n                const magma = this.magmaArr[index];\r\n                Laya.timer.clearAll(magma);\r\n            }\r\n        }\r\n    }\r\n    StateControl.Magma = Magma;\r\n    class Destination {\r\n        constructor() {\r\n            Destination.ins = this;\r\n        }\r\n        action(continueCb) {\r\n            this.fCameraFP = Role.ins.cameraPoint.transform.position.clone();\r\n            const bossPoint = Role.ins.scene.getChildByName('unitParent').getChildByName('Road999').getChildByName('BossPoint');\r\n            this.boss = bossPoint.getChildAt(0);\r\n            const bossPos = this.boss.transform.position.clone();\r\n            bossPos.z -= 10;\r\n            const time = 600;\r\n            LwgEvent.notify(GameEvent.hideRoleHP);\r\n            GameData.Sound.playSoundByID(14);\r\n            LwgAni3D.moveTo(Role.ins.cameraPoint, bossPos, time, this, null, () => {\r\n                const animator = this.boss.getComponent(Laya.Animator);\r\n                const state = GameData.Animator.getClipNameByRoleNameAndAni(this.boss.name, GameEnum.RoleAni.show);\r\n                animator.crossFade(state, 0.5);\r\n                Laya.timer.once(1500, this, () => {\r\n                    LwgAni3D.moveTo(Role.ins.cameraPoint, this.fCameraFP, time / 3, this, null, () => {\r\n                        const state1 = GameData.Animator.getClipNameByRoleNameAndAni(this.boss.name, GameEnum.RoleAni.idle);\r\n                        animator.crossFade(state1, 0.5);\r\n                        continueCb && continueCb();\r\n                        LwgAni3D.moveToX(Role.ins.cameraPoint, 0, time, this);\r\n                        LwgAni3D.moveToX(Role.ins.role, 0, time, this);\r\n                        LwgEvent.notify(GameEvent.showRoleHP);\r\n                    });\r\n                    LwgAni3D.rotateTo(Role.ins.cameraPoint, new Laya.Vector3(0, 0, 0), time, this);\r\n                });\r\n            });\r\n            LwgAni3D.rotateTo(Role.ins.cameraPoint, new Laya.Vector3(-21, 0, 0), time, this);\r\n        }\r\n    }\r\n    StateControl.Destination = Destination;\r\n    class VSBOSS {\r\n        constructor() {\r\n            this.intervalAttack = 250;\r\n            this.attackRole = 100;\r\n            this.effBaseX = 0;\r\n            this.effBaseY = 1.8;\r\n            this.effBaseZ = 1;\r\n            VSBOSS.ins = this;\r\n            LwgEvent.register(GameEvent.attackByClick, this, (clickNum) => {\r\n                if (clickNum === 1) {\r\n                    this.bossAttack();\r\n                }\r\n                if (!this.endVS) {\r\n                    const time = LwgDate.Now.time;\r\n                    if (time - this.curTimeAttack > this.intervalAttack) {\r\n                        this.roleAttack();\r\n                        this.curTimeAttack = time;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        reset() {\r\n            this.endVS = false;\r\n        }\r\n        action(bossBox, victoryCb, defeatedCb) {\r\n            GameData.Sound.playBgmByID(19);\r\n            this.boss = Destination.ins.boss;\r\n            this.defeatedCb = defeatedCb;\r\n            LwgEvent.notify(GameEvent.readyVSBOSS);\r\n            Destination.ins.boss = bossBox.parent;\r\n            this.BossHP = Math.round(GameData.Level.getBossHPByLevel());\r\n            LwgEvent.notify(GameEvent.updateBossHP, [this.BossHP]);\r\n            const skinHp = GameData.Skin.getHPByName(Role.ins.skin.name);\r\n            if (LwgControl.Game.level == 1) {\r\n                this.roleHP = 4000;\r\n            }\r\n            else {\r\n                this.roleHP = Math.round(GameData.Skill.getHP() * EatFood.ins.growthValue + skinHp);\r\n            }\r\n            const skinAttack = GameData.Skin.getAttackByName(Role.ins.skin.name);\r\n            this.attackRole = GameData.Skill.getAttack() + skinAttack;\r\n            LwgEvent.notify(GameEvent.updateRoleHP, [this.roleHP]);\r\n            this.roleFHp = this.roleHP;\r\n            this.curTimeAttack = LwgDate.Now.time;\r\n            Role.ins.playAniCrossFade(Role.ins.skin, GameEnum.RoleAni.idle);\r\n            this.victoryCb = victoryCb;\r\n            const time = 1000;\r\n            LwgAni3D.moveToX(Role.ins.cameraPoint, 0, time, this);\r\n            LwgAni3D.moveZ(Role.ins.cameraPoint, 3, time, this);\r\n            LwgAni3D.moveToY(Role.ins.cameraPoint, 2, time, this);\r\n            LwgAni3D.rotateTo(Role.ins.cameraPoint, new Laya.Vector3(-18, 64, 0), time, this, null, () => {\r\n                LwgEvent.notify(GameEvent.updateRoleHP, [this.roleHP]);\r\n                LwgEvent.notify(GameEvent.attackByClickStart);\r\n            });\r\n        }\r\n        bossAttack() {\r\n            Role.ins.playAniByCommon(this.boss, GameEnum.RoleAni.attack);\r\n            const aSpeedBoss = GameData.Level.getBossASpeedByLevel();\r\n            const attackBoss = GameData.Level.getBossAttackByLevel();\r\n            Laya.timer.loop(aSpeedBoss * 1000, this, () => {\r\n                if (this.boss.name == 'dino_202') {\r\n                    Role.ins.playAniByCommon(this.boss, GameEnum.RoleAni.idle);\r\n                    Role.ins.playAniByCommon(this.boss, GameEnum.RoleAni.attack);\r\n                }\r\n                Laya.timer.once(100, this, () => {\r\n                    GameData.Sound.playSoundByID(12);\r\n                });\r\n                const attackBossRan = Math.round(attackBoss * (1 - Math.random() * 0.05));\r\n                this.roleHP = Math.round(this.roleHP - attackBossRan);\r\n                Role.ins.showFontHP(-attackBossRan, Role.ins.role, -50, -150);\r\n                LwgEvent.notify(GameEvent.updateRoleHP, [this.roleHP]);\r\n                const scale = Role.ins.role.transform.localScaleX;\r\n                Effect3D.ins.play_Attack(new Laya.Vector3(this.effBaseX * scale, this.effBaseY * scale, this.effBaseZ * scale), Role.ins.role, true);\r\n                if (this.roleHP <= 0) {\r\n                    this.actionStop();\r\n                    this.defeatedCb && this.defeatedCb();\r\n                    Role.ins.playAniCrossFade(this.boss, GameEnum.RoleAni.idle);\r\n                    LwgEvent.notify(GameEvent.attackByClickEnd);\r\n                    this.endVS = true;\r\n                }\r\n            });\r\n        }\r\n        roleAttack() {\r\n            Laya.timer.once(100, this, () => {\r\n                GameData.Sound.playSoundByID(12);\r\n            });\r\n            Role.ins.playAniRole(GameEnum.RoleAni.idle);\r\n            Role.ins.playAniRole(GameEnum.RoleAni.attack);\r\n            Laya.timer.clearAll(Role.ins.role);\r\n            Laya.timer.once(600, Role.ins.role, () => {\r\n                Role.ins.playAniRole(GameEnum.RoleAni.idle);\r\n            });\r\n            const attackRole = GameData.Skill.getAttack();\r\n            const attackRoleRan = Math.round(attackRole * (1 - Math.random() * 0.05));\r\n            Role.ins.showFontHP(-attackRoleRan, this.boss.parent, -50, -150);\r\n            this.BossHP = Math.round(this.BossHP - attackRoleRan);\r\n            LwgEvent.notify(GameEvent.updateBossHP, [this.BossHP]);\r\n            const bossPoint = this.boss.parent;\r\n            const scale = bossPoint.transform.localScaleX;\r\n            Effect3D.ins.play_Attack(new Laya.Vector3(this.effBaseX * scale, this.effBaseY * scale, this.effBaseZ * scale), bossPoint, true);\r\n            if (this.BossHP <= 0) {\r\n                this.actionStop();\r\n                this.victoryCb && this.victoryCb();\r\n                LwgEvent.notify(GameEvent.pickedKey);\r\n                Role.ins.playAniByCommon(this.boss, GameEnum.RoleAni.death);\r\n                LwgEvent.notify(GameEvent.attackByClickEnd);\r\n                this.endVS = true;\r\n            }\r\n        }\r\n        actionStop() {\r\n            Laya.timer.clearAll(this);\r\n        }\r\n    }\r\n    StateControl.VSBOSS = VSBOSS;\r\n    class StrikeFly {\r\n        constructor() {\r\n            StrikeFly.ins = this;\r\n        }\r\n        action(continueCb) {\r\n            GameData.Sound.playSoundByID(17);\r\n            this.boss = Destination.ins.boss;\r\n            Laya.timer.once(300, this, () => {\r\n                this.num = GameData.LevelScore.getRewardIDByHpPer(VSBOSS.ins.roleHP / VSBOSS.ins.roleFHp);\r\n                this.numBox = Role.ins.scene.getChildByName('unitParent').getChildByName('Road999').getChildByName(`box0${StrikeFly.ins.num}`);\r\n                console.log('血量百分比', VSBOSS.ins.roleHP / VSBOSS.ins.roleFHp, '段数:', this.num);\r\n                const time1 = 4000;\r\n                const time2 = 1000;\r\n                const delay2 = 300;\r\n                const posZ = this.numBox.transform.position.z + 10;\r\n                LwgAni3D.moveToY(Role.ins.cameraPoint, 15, time2, this);\r\n                LwgAni3D.moveToX(Role.ins.cameraPoint, 0, time1, this);\r\n                LwgAni3D.rotateTo(Role.ins.cameraPoint, new Laya.Vector3(0, 0, 0), time2, this, null, null, delay2);\r\n                LwgAni3D.moveToZ(this.boss, posZ, time1, this);\r\n                LwgAni3D.moveToZ(Role.ins.cameraPoint, posZ - 20, time1, this);\r\n                const time4 = 1000;\r\n                const time5 = 450;\r\n                const time6 = 200;\r\n                const coefficient = this.num / 8;\r\n                const high1 = 20 * coefficient;\r\n                const high2 = 8 * coefficient;\r\n                const high3 = 2 * coefficient;\r\n                LwgAni3D.moveToY(this.boss, high1, time4, this, Laya.Ease.quintOut, () => {\r\n                    LwgAni3D.moveToY(this.boss, 0, time4, this, Laya.Ease.quintIn, () => {\r\n                        GameData.Sound.playSoundByID(15);\r\n                        GameData.Sound.playBgmByID(1);\r\n                        LwgAni3D.rotateTo(this.boss, new Laya.Vector3(0, 60, 0), time5 * 2 + time6 * 2 + 2000, this, Laya.Ease.strongOut);\r\n                        LwgAni3D.moveToY(this.boss, high2, time5, this, Laya.Ease.quintOut, () => {\r\n                            LwgAni3D.moveToY(this.boss, 0, time5, this, Laya.Ease.quintIn, () => {\r\n                                GameData.Sound.playSoundByID(15);\r\n                                LwgAni3D.moveToY(this.boss, high3, time6, this, Laya.Ease.quintOut, () => {\r\n                                    LwgAni3D.moveToY(this.boss, 0, time6, this, Laya.Ease.quintIn, () => {\r\n                                        GameData.Sound.playSoundByID(15);\r\n                                        Laya.timer.once(1000, this, () => {\r\n                                            continueCb && continueCb();\r\n                                        });\r\n                                    });\r\n                                });\r\n                            });\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n        }\r\n        actionStop() {\r\n            Laya.timer.clearAll(this);\r\n        }\r\n    }\r\n    StateControl.StrikeFly = StrikeFly;\r\n    class ShowEndReward {\r\n        constructor() {\r\n            ShowEndReward.ins = this;\r\n        }\r\n        action(continueCb) {\r\n            GameData.Sound.playSoundByID(18);\r\n            this.boss = Destination.ins.boss;\r\n            const time = 1500;\r\n            this.item = GameData.LevelScore.getRewardByNum(StrikeFly.ins.num);\r\n            const baoxiang = StrikeFly.ins.numBox.getChildByName('baoxiang');\r\n            let rewardSp3D;\r\n            switch (this.item.type) {\r\n                case GameEnum.ItemType.Currency:\r\n                    rewardSp3D = GameRes.Prefab3D.end_chest.instance.clone();\r\n                    rewardSp3D.transform.localRotationEulerY = 180;\r\n                    break;\r\n                case GameEnum.ItemType.EndlessMode:\r\n                    rewardSp3D = GameRes.Prefab3D.effect_chuansong.instance.clone();\r\n                    break;\r\n                case GameEnum.ItemType.SkinTry:\r\n                    rewardSp3D = GameRes.Prefab3D[this.item.model].instance.clone();\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            baoxiang.addChild(rewardSp3D);\r\n            LwgAni3D.moveY(StrikeFly.ins.numBox, 30, time, this, null, () => {\r\n                continueCb && continueCb();\r\n            });\r\n            LwgAni3D.moveY(this.boss, 30, time, this);\r\n            LwgAni3D.moveY(Role.ins.cameraPoint, 10, time, this);\r\n            LwgAni3D.moveZ(Role.ins.cameraPoint, -15, time, this);\r\n        }\r\n    }\r\n    StateControl.ShowEndReward = ShowEndReward;\r\n    class ReceiveAward {\r\n        constructor() {\r\n            ReceiveAward.ins = this;\r\n        }\r\n        action() {\r\n            Laya.timer.once(1500, this, () => {\r\n                LwgEvent.notify(GameEvent.receiveAward, [ShowEndReward.ins.item]);\r\n            });\r\n        }\r\n    }\r\n    StateControl.ReceiveAward = ReceiveAward;\r\n    class Defeated {\r\n        constructor() {\r\n            Defeated.ins = this;\r\n        }\r\n        action() {\r\n            Magma.ins.clearAllMagma();\r\n            Role.ins.playAniCrossFade(Role.ins.skin, GameEnum.RoleAni.death);\r\n            Laya.timer.once(1500, this, () => {\r\n                LwgEvent.notify(GameEvent.defeated);\r\n            });\r\n        }\r\n    }\r\n    StateControl.Defeated = Defeated;\r\n})(StateControl || (StateControl = {}));\r\n",
  "references": [
    "E:/svn/恐龙跑酷/DinosaursGrow_Laya_2.9.0/DinosaursGrowUp_2.9.0/src/ui/layaMaxUI.ts",
    "E:/svn/恐龙跑酷/DinosaursGrow_Laya_2.9.0/DinosaursGrowUp_2.9.0/src/script/Lwg/Lwg.ts",
    "E:/svn/恐龙跑酷/DinosaursGrow_Laya_2.9.0/DinosaursGrowUp_2.9.0/src/script/Game/Control/GameData.ts",
    "E:/svn/恐龙跑酷/DinosaursGrow_Laya_2.9.0/DinosaursGrowUp_2.9.0/src/script/Game/Control/GameEnum.ts",
    "E:/svn/恐龙跑酷/DinosaursGrow_Laya_2.9.0/DinosaursGrowUp_2.9.0/src/script/Game/Control/GameEvent.ts",
    "E:/svn/恐龙跑酷/DinosaursGrow_Laya_2.9.0/DinosaursGrowUp_2.9.0/src/script/Game/Control/GameRes.ts",
    "E:/svn/恐龙跑酷/DinosaursGrow_Laya_2.9.0/DinosaursGrowUp_2.9.0/src/script/Game/Control/GameType.ts",
    "E:/svn/恐龙跑酷/DinosaursGrow_Laya_2.9.0/DinosaursGrowUp_2.9.0/src/script/Game/Game3D/Effect3D.ts",
    "E:/svn/恐龙跑酷/DinosaursGrow_Laya_2.9.0/DinosaursGrowUp_2.9.0/src/script/Game/Game3D/MainScene.ts"
  ]
}
