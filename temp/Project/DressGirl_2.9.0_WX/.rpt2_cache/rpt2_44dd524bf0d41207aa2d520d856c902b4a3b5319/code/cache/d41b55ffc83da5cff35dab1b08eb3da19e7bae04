{
  "code": "import { LwgClick, LwgControl, LwgDate, LwgScene } from \"../../Lwg/Lwg\";\r\nimport { GameEvent } from \"../Control/GameEvent\";\r\nimport GameSceneName from \"../Control/GameSceneName\";\r\nimport { GameData } from \"../Control/GameData\";\r\nimport { Control3D } from \"../Game3D/Control3D\";\r\nimport { GameEnum } from \"../Control/GameEnum\";\r\nexport default class Levels extends LwgScene.SceneBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.lastTime = 0;\r\n        this.lastPlusOrMinus = 0;\r\n        this.lastNum = 0;\r\n        this.clickNum = 1;\r\n    }\r\n    get curCcore() {\r\n        return this['_curCcore'] ? this['_curCcore'] : 0;\r\n    }\r\n    set curCcore(val) {\r\n        this['_curCcore'] = val;\r\n    }\r\n    get growthValue() {\r\n        return this['_growthValue'] ? this['_growthValue'] : 0;\r\n    }\r\n    set growthValue(val) {\r\n        this['_growthValue'] = val;\r\n        this.owner.lbGrowthValue.text = val.toString();\r\n    }\r\n    lwgOnAwake() {\r\n        this.curCcore = 0;\r\n    }\r\n    lwgOnStart() {\r\n        Control3D.start();\r\n        this.setLevelProgress();\r\n        this.updateKey();\r\n        if (this.openData.mode === GameEnum.LevelMode.endless) {\r\n            this.owner.boxLv.visible = false;\r\n            this.owner.boxKey.visible = false;\r\n        }\r\n        else {\r\n            this.owner.boxMileage.visible = false;\r\n        }\r\n    }\r\n    setLevelProgress() {\r\n        this.owner.lbCurLevel.text = LwgControl.Game.levelReal.toString();\r\n    }\r\n    lwgEvent() {\r\n        this.evRegister(GameEvent.beAttacked, () => {\r\n            this.owner.aniBeAttacked.play(0, false);\r\n        });\r\n        this.evRegister(GameEvent.updateLevelDisplay, (pos) => {\r\n            this.owner.boxRoleLv.pos(pos.x, pos.y);\r\n        });\r\n        this.evRegister(GameEvent.readyVSBOSS, () => {\r\n            this.owner.boxLv.visible = false;\r\n            this.owner.boxRoleLv.visible = false;\r\n        });\r\n        this.evRegister(GameEvent.hideRoleHP, () => {\r\n            this.owner.boxRoleLv.visible = false;\r\n        });\r\n        this.evRegister(GameEvent.showRoleHP, () => {\r\n            this.owner.boxRoleLv.visible = true;\r\n        });\r\n        this.evRegister(GameEvent.updateRoleHP, (hp) => {\r\n            if (!this.roleFirstHp) {\r\n                this.roleFirstHp = hp;\r\n            }\r\n            this.owner.lbRoleHP.visible = true;\r\n            this.owner.lbRoleHP.text = hp.toString();\r\n            this.owner.imgRoleHp.mask.width = hp / this.roleFirstHp * this.owner.imgRoleHp.width;\r\n            if (hp <= 0) {\r\n                hp = 0;\r\n                this.owner.imgRoleHp.visible = false;\r\n                this.owner.lbRoleHP.text = '0';\r\n            }\r\n        });\r\n        this.evRegister(GameEvent.updateBossHP, (hp) => {\r\n            if (!this.bossFirstHp) {\r\n                this.bossFirstHp = hp;\r\n            }\r\n            this.owner.lbBossHP.visible = true;\r\n            this.owner.lbBossHP.text = hp.toString();\r\n            this.owner.imgBossHp.mask.width = hp / this.bossFirstHp * this.owner.imgBossHp.width;\r\n            if (hp <= 0) {\r\n                hp = 0;\r\n                this.owner.imgBossHp.visible = false;\r\n                this.owner.lbBossHP.text = '0';\r\n            }\r\n        });\r\n        this.evRegister(GameEvent.attackByClickStart, () => {\r\n            this.owner.boxRefuel.visible = true;\r\n            this.owner.boxLv.visible = false;\r\n            this.owner.boxVS.visible = true;\r\n            this.owner.aniRefuel1.play(0, false);\r\n            Laya.timer.once(500, this, () => {\r\n                this.owner.aniRefuel2.play(0, true);\r\n            });\r\n        });\r\n        this.evRegister(GameEvent.attackByClickEnd, () => {\r\n            this.owner.boxRefuel.visible = false;\r\n        });\r\n        this.evRegister(GameEvent.updateGrowthValue, (growthValue, lv) => {\r\n            if (growthValue < 0) {\r\n                growthValue = 0;\r\n            }\r\n            const num = growthValue - this.growthValue;\r\n            this.showContinuousNum(num);\r\n            if (!this.startShowNum) {\r\n                this.startShowNum = true;\r\n            }\r\n            this.growthValue = growthValue;\r\n            let baseValue = GameData.Level.upgradeValue * lv - 1;\r\n            console.log('等级', lv, '基数', baseValue, '当前值', this.growthValue);\r\n            if (growthValue >= baseValue * 4) {\r\n                growthValue = baseValue * 4;\r\n            }\r\n            const per = this.growthValue / baseValue;\r\n            this.owner.imgRoleLv.mask.width = Math.round(this.owner.imgRoleLv.width * per);\r\n        });\r\n        this.evRegister(GameEvent.updateScore, (score0) => {\r\n            this.curCcore += score0;\r\n        });\r\n        this.evRegister(GameEvent.updateLvSchedule, (per, mileage) => {\r\n            this.owner.levelProgress.mask.width = per * 280;\r\n            this.owner.lbMileage.text = Math.floor(mileage) + 'm';\r\n        });\r\n        this.evRegister(GameEvent.receiveAward, (num) => {\r\n            const item = GameData.LevelScore.getRanRewardByNum(num);\r\n            const data = {\r\n                itme: item,\r\n                whereFrom: this.owner.name\r\n            };\r\n            this.openOverlayScene(GameSceneName.BeRewarded, data);\r\n        });\r\n        this.evRegister(GameEvent.defeated, () => {\r\n            const data = {\r\n                score: this.curCcore,\r\n            };\r\n            this.openScene(GameSceneName.Defeated, data);\r\n        });\r\n        this.evRegister(GameEvent.pickedKey, () => {\r\n            GameData.Lottery.KeyNum++;\r\n            this.updateKey();\r\n        });\r\n        this.evRegister(GameEvent.updateHead, (skinName) => {\r\n            const type = GameData.Skin.getTypeByName(skinName);\r\n            this.owner.imgRoleIcon.skin = `Game/UI/SkinIcon/${skinName}.png`;\r\n            if (type === GameEnum.RoleType.meat) {\r\n                this.owner.imgRoleBoard.skin = 'Game/UI/img_icon_battlebg_02.png';\r\n            }\r\n            else {\r\n                this.owner.imgRoleBoard.skin = 'Game/UI/img_icon_battlebg_01.png';\r\n            }\r\n        });\r\n    }\r\n    showContinuousNum(num) {\r\n        if (!this.startShowNum) {\r\n            return;\r\n        }\r\n        Laya.timer.clearAll(this.owner.lbContinuousNum);\r\n        this.owner.lbContinuousNum.visible = true;\r\n        const time = 1000;\r\n        if (LwgDate.Now.time - this.lastTime < time) {\r\n            if (this.lastPlusOrMinus > 0 && num > 0) {\r\n                this.lastNum += num;\r\n            }\r\n            else if (this.lastPlusOrMinus < 0 && num < 0) {\r\n                this.lastNum += num;\r\n            }\r\n            else {\r\n                this.lastNum = num;\r\n            }\r\n        }\r\n        else {\r\n            this.lastNum = num;\r\n        }\r\n        this.lastPlusOrMinus = num;\r\n        this.lastTime = LwgDate.Now.time;\r\n        if (this.lastNum > 0) {\r\n            this.owner.lbContinuousNum.text = '+' + this.lastNum;\r\n            this.owner.lbContinuousNum.strokeColor = '#37db21';\r\n        }\r\n        else if (this.lastNum === 0) {\r\n            this.owner.lbContinuousNum.visible = false;\r\n        }\r\n        else {\r\n            this.owner.lbContinuousNum.text = this.lastNum.toString();\r\n            this.owner.lbContinuousNum.strokeColor = '#db2f21';\r\n        }\r\n        Laya.timer.once(time, this.owner.lbContinuousNum, () => {\r\n            this.owner.lbContinuousNum.visible = false;\r\n        });\r\n    }\r\n    lwgButton() {\r\n        this.btnOnFour(this.owner.btnRefuel, () => {\r\n            this.owner.btnRefuel.skin = 'Game/UI/img_btn_zadan_chick_press.png';\r\n        }, () => {\r\n        }, () => {\r\n            this.evNotify(GameEvent.attackByClick, [this.clickNum]);\r\n            this.clickNum++;\r\n            this.owner.btnRefuel.skin = 'Game/UI/img_btn_zadan_chick_normal.png';\r\n        }, () => {\r\n        }, LwgClick.EmEffectType.NoEffect);\r\n    }\r\n    updateKey() {\r\n        for (let index = 1; index < 4; index++) {\r\n            if (index > GameData.Lottery.KeyNum) {\r\n                this.owner[`key${index}`].visible = false;\r\n            }\r\n            else {\r\n                this.owner[`key${index}`].visible = true;\r\n            }\r\n        }\r\n    }\r\n}\r\n",
  "references": [
    "E:/svn/恐龙跑酷/DinosaursGrow_Laya_2.9.0/DinosaursGrowUp_2.9.0/src/script/Lwg/Lwg.ts",
    "E:/svn/恐龙跑酷/DinosaursGrow_Laya_2.9.0/DinosaursGrowUp_2.9.0/src/script/Game/Control/GameRes.ts",
    "E:/svn/恐龙跑酷/DinosaursGrow_Laya_2.9.0/DinosaursGrowUp_2.9.0/src/script/Game/Control/GameEvent.ts",
    "E:/svn/恐龙跑酷/DinosaursGrow_Laya_2.9.0/DinosaursGrowUp_2.9.0/src/ui/layaMaxUI.ts",
    "E:/svn/恐龙跑酷/DinosaursGrow_Laya_2.9.0/DinosaursGrowUp_2.9.0/src/script/Game/Control/GameSceneName.ts",
    "E:/svn/恐龙跑酷/DinosaursGrow_Laya_2.9.0/DinosaursGrowUp_2.9.0/src/script/Game/Control/GameType.ts",
    "E:/svn/恐龙跑酷/DinosaursGrow_Laya_2.9.0/DinosaursGrowUp_2.9.0/src/script/Game/Control/GameData.ts",
    "E:/svn/恐龙跑酷/DinosaursGrow_Laya_2.9.0/DinosaursGrowUp_2.9.0/src/script/Game/Game3D/Control3D.ts",
    "E:/svn/恐龙跑酷/DinosaursGrow_Laya_2.9.0/DinosaursGrowUp_2.9.0/src/script/Game/Control/GameEnum.ts"
  ]
}
